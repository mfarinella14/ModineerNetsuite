{
	"name": "Data Refresh Delta",
	"properties": {
		"activities": [
			{
				"name": "Get Refresh Tables",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Get EST Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlPoolSource",
						"sqlReaderStoredProcedureName": "[Config].[DataRefresh]",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "Modineer",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach Table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Refresh Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Refresh Tables').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 10,
					"activities": [
						{
							"name": "Switch on RowGroup",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "Set Table as Updating",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@item().RowGroup",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "GloviaProd",
										"activities": [
											{
												"name": "Get SCN Number",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "@concat('SELECT MAX(ORA_ROWSCN) AS \"SCNValue\" FROM ',item().SchemaName,'.',item().TableName)",
															"type": "Expression"
														},
														"partitionOption": "None",
														"queryTimeout": "02:00:00"
													},
													"dataset": {
														"referenceName": "GloviaProd",
														"type": "DatasetReference",
														"parameters": {
															"tablename": {
																"value": "@item().TableName",
																"type": "Expression"
															},
															"schemaname": {
																"value": "@item().SchemaName",
																"type": "Expression"
															}
														}
													}
												}
											},
											{
												"name": "Update SCN",
												"type": "SqlPoolStoredProcedure",
												"dependsOn": [
													{
														"activity": "Get SCN Number",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"sqlPool": {
													"referenceName": "Modineer",
													"type": "SqlPoolReference"
												},
												"typeProperties": {
													"storedProcedureName": "[Config].[UpdateSCN]",
													"storedProcedureParameters": {
														"Id": {
															"value": {
																"value": "@item().Id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"SCN": {
															"value": {
																"value": "@activity('Get SCN Number').output.firstRow.SCNValue",
																"type": "Expression"
															},
															"type": "Int64"
														}
													}
												}
											},
											{
												"name": "Glovia Raw Data Copy - ADLS2",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Update SCN",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": true,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "@{item().SchemaName}.@{item().TableName}"
													},
													{
														"name": "Destination",
														"value": "@{item().FileSystem}/@{concat(item().SchemaName, '/', item().TableName, '/', activity('Get EST Date').output.firstRow.Year, '/', activity('Get EST Date').output.firstRow.Month, '/', activity('Get EST Date').output.firstRow.Day)}/@{concat(item().TableName, '-', activity('Get EST Date').output.firstRow.EST)}"
													}
												],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "SELECT * FROM @{item().SchemaName}.@{item().TableName} VERSIONS BETWEEN TIMESTAMP TO_TIMESTAMP(REPLACE(REPLACE('@{addminutes(item().LastRefreshStart,-15)}','T',' '),'Z',''), 'YYYY-MM-DD HH24:MI:SS.FF') AND CURRENT_TIMESTAMP WHERE versions_operation IN ('D','U','I')",
															"type": "Expression"
														},
														"partitionOption": "None",
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "GloviaProd",
														"type": "DatasetReference",
														"parameters": {
															"tablename": {
																"value": "@item().TableName",
																"type": "Expression"
															},
															"schemaname": {
																"value": "@item().SchemaName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "SinkParquet",
														"type": "DatasetReference",
														"parameters": {
															"file_system": {
																"value": "@item().FileSystem",
																"type": "Expression"
															},
															"directory": {
																"value": "@{item().SchemaName}/@{item().TableName}/@{activity('Get EST Date').output.firstRow.Year}/@{activity('Get EST Date').output.firstRow.Month}/@{activity('Get EST Date').output.firstRow.Day}",
																"type": "Expression"
															},
															"file_name": {
																"value": "@{item().TableName}-@{activity('Get EST Date').output.firstRow.EST}.parquet",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Glovia Raw Data Copy - SQL Pool",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Update SCN",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": true,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "@{item().SchemaName}.@{item().TableName}"
													},
													{
														"name": "Destination",
														"value": "@{'Delta'}.@{item().TableName}"
													}
												],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "SELECT * FROM @{item().SchemaName}.@{item().TableName} VERSIONS BETWEEN TIMESTAMP TO_TIMESTAMP(REPLACE(REPLACE('@{addminutes(item().LastRefreshStart,-15)}','T',' '),'Z',''), 'YYYY-MM-DD HH24:MI:SS.FF') AND CURRENT_TIMESTAMP WHERE versions_operation IN ('D','U','I')",
															"type": "Expression"
														},
														"partitionOption": "None",
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SqlDWSink",
														"preCopyScript": {
															"value": "TRUNCATE TABLE Delta.@{item().TableName}",
															"type": "Expression"
														},
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "GloviaProd",
														"type": "DatasetReference",
														"parameters": {
															"tablename": {
																"value": "@item().TableName",
																"type": "Expression"
															},
															"schemaname": {
																"value": "@item().SchemaName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSynapseDatabase",
														"type": "DatasetReference",
														"parameters": {
															"TableName": {
																"value": "@item().TableName",
																"type": "Expression"
															},
															"DbName": {
																"value": "@item().DbName",
																"type": "Expression"
															},
															"SchemaName": "Delta"
														}
													}
												]
											},
											{
												"name": "Glovia Create Table Or Merge Data",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Glovia Raw Data Copy - SQL Pool",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "Data Merge",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"item": {
															"value": "@item()",
															"type": "Expression"
														},
														"DateData": {
															"value": "@activity('Get EST Date').output.firstRow",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "Netsuite",
										"activities": [
											{
												"name": "Execute Netsuite Data Refresh",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "Netsuite Data Refresh",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"item": {
															"value": "@item()",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "Plex",
										"activities": [
											{
												"name": "Plex Data Refresh",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "Plex Data Refresh - Data Count",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"item": {
															"value": "@item()",
															"type": "Expression"
														},
														"EstDate": {
															"value": "@activity('Get EST Date').output",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								],
								"defaultActivities": [
									{
										"name": "Place Holder",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								]
							}
						},
						{
							"name": "Set Table as Updating",
							"type": "SqlPoolStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"sqlPool": {
								"referenceName": "Modineer",
								"type": "SqlPoolReference"
							},
							"typeProperties": {
								"storedProcedureName": "[Config].[SetAsUpdating]",
								"storedProcedureParameters": {
									"nextRefresh": {
										"value": {
											"value": "@addToTime(utcnow(),item().RefreshNumber,item().RefreshInterval)",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"rowId": {
										"value": {
											"value": "@item().Id",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							}
						},
						{
							"name": "Set Table to Processed",
							"type": "SqlPoolStoredProcedure",
							"dependsOn": [
								{
									"activity": "Switch on RowGroup",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"sqlPool": {
								"referenceName": "Modineer",
								"type": "SqlPoolReference"
							},
							"typeProperties": {
								"storedProcedureName": "[Config].[SetAsUpdated]",
								"storedProcedureParameters": {
									"rowId": {
										"value": {
											"value": "@item().Id",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							}
						},
						{
							"name": "Failed To Update",
							"type": "SqlPoolStoredProcedure",
							"dependsOn": [
								{
									"activity": "Switch on RowGroup",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"sqlPool": {
								"referenceName": "Modineer",
								"type": "SqlPoolReference"
							},
							"typeProperties": {
								"storedProcedureName": "[Config].[FailedToUpdate]",
								"storedProcedureParameters": {
									"RowId": {
										"value": {
											"value": "@item().Id",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"RowSCN": {
										"value": {
											"value": "@item().TableMaxSCN",
											"type": "Expression"
										},
										"type": "Int64"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Get EST Date",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlPoolSource",
						"sqlReaderStoredProcedureName": "[Config].[usp_GetESTDate]",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "Modineer",
						"type": "DatasetReference"
					}
				}
			}
		],
		"folder": {
			"name": "Master Data"
		},
		"annotations": [],
		"lastPublishTime": "2021-11-12T20:33:37Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}