{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "modineerworkspace"
		},
		"GloviaData_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'GloviaData'"
		},
		"HTM_NetSuite_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HTM_NetSuite'"
		},
		"Legacy HTM Netsuite Refresh Token_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Legacy HTM Netsuite Refresh Token'"
		},
		"ModineerSQLPool_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ModineerSQLPool'"
		},
		"ModineerTableStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ModineerTableStorage'"
		},
		"NetsuiteODBC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'NetsuiteODBC'"
		},
		"NetsuiteODBC_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NetsuiteODBC'"
		},
		"modineerworkspace-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'modineerworkspace-WorkspaceDefaultSqlServer'"
		},
		"HTM_NetSuite_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://3675944.restlets.api.netsuite.com"
		},
		"HTM_NetSuite_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "228ec78c8e0232dce7bb92d461600c6f78ae03778e6e1aa272d5162312799e4a"
		},
		"Legacy HTM Netsuite Refresh Token_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://',linkedService().account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')}"
		},
		"Legacy HTM Netsuite Refresh Token_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
		},
		"Netsuite SuiteQL_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://3675944.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql"
		},
		"NetsuiteODBC_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "mfarinella@modineer.com"
		},
		"modineerlake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://modineerlake.dfs.core.windows.net/"
		},
		"modineerworkspace-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://modineerlake.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Copy All Data From NetsuiteData to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "This is an initial run to get all of the legacy data from the database to the data lake. I want to retire the NetsuiteData database to save cost.",
				"activities": [
					{
						"name": "Get Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderQuery": "SELECT *\nFROM SYS.tables",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "NetsuiteData",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "SYS",
									"TableName": "tables"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Table Names').output.value",
								"type": "Expression"
							},
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy to ADLS2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "NetsuiteData",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "dbo",
												"TableName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SinkParquet",
											"type": "DatasetReference",
											"parameters": {
												"file_system": "unified-data-cluster",
												"directory": {
													"value": "@concat('legacy-htm/NetsuiteData/',item().name)",
													"type": "Expression"
												},
												"file_name": {
													"value": "@concat(item().name,'-',convertFromUtc(utcnow(),'Eastern Standard Time'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "HTM/Database Migration"
				},
				"annotations": [],
				"lastPublishTime": "2021-11-05T15:36:58Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/NetsuiteData')]",
				"[concat(variables('workspaceId'), '/datasets/SinkParquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Data Refresh')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Refresh Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderStoredProcedureName": "[Config].[DataRefresh]",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "Modineer",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Refresh Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Refresh Tables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 5,
							"activities": [
								{
									"name": "Switch on RowGroup",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().RowGroup",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "GloviaProd",
												"activities": [
													{
														"name": "Get SCN Number",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "OracleSource",
																"oracleReaderQuery": {
																	"value": "@concat('SELECT MAX(ORA_ROWSCN) AS \"SCNValue\" FROM ',item().SchemaName,'.',item().TableName)",
																	"type": "Expression"
																},
																"partitionOption": "None",
																"queryTimeout": "02:00:00"
															},
															"dataset": {
																"referenceName": "GloviaProd",
																"type": "DatasetReference",
																"parameters": {
																	"tablename": {
																		"value": "@item().TableName",
																		"type": "Expression"
																	},
																	"schemaname": {
																		"value": "@item().SchemaName",
																		"type": "Expression"
																	}
																}
															}
														}
													},
													{
														"name": "Set Table as Updating",
														"type": "SqlPoolStoredProcedure",
														"dependsOn": [
															{
																"activity": "Get SCN Number",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"sqlPool": {
															"referenceName": "Modineer",
															"type": "SqlPoolReference"
														},
														"typeProperties": {
															"storedProcedureName": "[Config].[SetAsUpdating]",
															"storedProcedureParameters": {
																"interval": {
																	"value": {
																		"value": "@item().RefreshInterval",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"intervalQty": {
																	"value": {
																		"value": "@item().RefreshNumber",
																		"type": "Expression"
																	},
																	"type": "Int32"
																},
																"rowId": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																},
																"SCN": {
																	"value": {
																		"value": "@item().TableMaxSCN",
																		"type": "Expression"
																	},
																	"type": "Int64"
																}
															}
														}
													},
													{
														"name": "Raw Data Copy",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "Set Table as Updating",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": true,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "OracleSource",
																"partitionOption": "None",
																"queryTimeout": "02:00:00"
															},
															"sink": {
																"type": "ParquetSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "ParquetWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "GloviaProd",
																"type": "DatasetReference",
																"parameters": {
																	"tablename": {
																		"value": "@item().TableName",
																		"type": "Expression"
																	},
																	"schemaname": {
																		"value": "@item().SchemaName",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "SinkParquet",
																"type": "DatasetReference",
																"parameters": {
																	"file_system": {
																		"value": "@item().FileSystem",
																		"type": "Expression"
																	},
																	"directory": {
																		"value": "@concat(item().SchemaName,'/',item().TableName)",
																		"type": "Expression"
																	},
																	"file_name": {
																		"value": "@concat(item().TableName,'.parquet')",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Set Table to Processed",
														"type": "SqlPoolStoredProcedure",
														"dependsOn": [
															{
																"activity": "Raw Data Copy",
																"dependencyConditions": [
																	"Succeeded",
																	"Failed"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"sqlPool": {
															"referenceName": "Modineer",
															"type": "SqlPoolReference"
														},
														"typeProperties": {
															"storedProcedureName": "[Config].[SetAsUpdated]",
															"storedProcedureParameters": {
																"rowId": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																}
															}
														}
													}
												]
											},
											{
												"value": "Netsuite",
												"activities": [
													{
														"name": "Execute Netsuite Data Refresh",
														"type": "ExecutePipeline",
														"dependsOn": [
															{
																"activity": "Set as Updating",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "Netsuite Data Refresh",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"item": {
																	"value": "@item()",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "Set as Updated",
														"type": "SqlPoolStoredProcedure",
														"dependsOn": [
															{
																"activity": "Execute Netsuite Data Refresh",
																"dependencyConditions": [
																	"Succeeded",
																	"Failed"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"sqlPool": {
															"referenceName": "Modineer",
															"type": "SqlPoolReference"
														},
														"typeProperties": {
															"storedProcedureName": "[Config].[SetAsUpdated]",
															"storedProcedureParameters": {
																"rowId": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																}
															}
														}
													},
													{
														"name": "Set as Updating",
														"type": "SqlPoolStoredProcedure",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"sqlPool": {
															"referenceName": "Modineer",
															"type": "SqlPoolReference"
														},
														"typeProperties": {
															"storedProcedureName": "[Config].[SetAsUpdating]",
															"storedProcedureParameters": {
																"interval": {
																	"value": {
																		"value": "@item().RefreshInterval",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"intervalQty": {
																	"value": {
																		"value": "@item().RefreshNumber",
																		"type": "Expression"
																	},
																	"type": "Int32"
																},
																"rowId": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																},
																"SCN": {
																	"value": "0",
																	"type": "Int64"
																}
															}
														}
													}
												]
											},
											{
												"value": "Plex",
												"activities": [
													{
														"name": "Place Holder_copy2",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 1
														}
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Place Holder",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master Data"
				},
				"annotations": [],
				"lastPublishTime": "2021-11-12T20:33:37Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Modineer')]",
				"[concat(variables('workspaceId'), '/datasets/GloviaProd')]",
				"[concat(variables('workspaceId'), '/sqlPools/Modineer')]",
				"[concat(variables('workspaceId'), '/datasets/SinkParquet')]",
				"[concat(variables('workspaceId'), '/pipelines/Netsuite Data Refresh')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DataRails')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateSQLTableFromParquet",
								"type": "DataFlowReference",
								"parameters": {
									"SchemaName": {
										"value": "'@{concat('GLOVIA_PROD')}'",
										"type": "Expression"
									},
									"TableName": {
										"value": "'@{concat('JE_DET.parquet')}'",
										"type": "Expression"
									},
									"KeyColumns": {
										"value": "'@{concat('JE_CCN,JE,JE_SUB,JE_LINE')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"NewData": {
										"file_system": "unified-data-cluster",
										"directory": "GLOVIA_PROD/JE_DET/NotProcessed",
										"file_name": "JE_DET.parquet"
									},
									"SinkToAzureTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT * FROM GLOVIA_PROD.JE_DET WHERE ORA_ROWSCN >= 2874617532",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "GloviaProd",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "JE_DET",
									"schemaname": "GLOVIA_PROD"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkParquet",
								"type": "DatasetReference",
								"parameters": {
									"file_system": "unified-data-cluster",
									"directory": "GLOVIA_PROD/JE_DET/NotProcessed",
									"file_name": "JE_DET.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Temp"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/UpdateSQLTableFromParquet')]",
				"[concat(variables('workspaceId'), '/datasets/GloviaProd')]",
				"[concat(variables('workspaceId'), '/datasets/SinkParquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Account Types to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT id FROM accountType"
							}
						}
					},
					{
						"name": "ForEach Customer",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 contacts. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages').output.totalResults),mod(int(activity('Get Pages').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\": \"SELECT * FROM accounttype\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['balancesheet']"
													},
													"sink": {
														"path": "$['balancesheet']"
													}
												},
												{
													"source": {
														"path": "['defaultcashflowratetype']"
													},
													"sink": {
														"path": "$['defaultcashflowratetype']"
													}
												},
												{
													"source": {
														"path": "['defaultgeneralratetype']"
													},
													"sink": {
														"path": "$['defaultgeneralratetype']"
													}
												},
												{
													"source": {
														"path": "['includeinrevaldefault']"
													},
													"sink": {
														"path": "$['includeinrevaldefault']"
													}
												},
												{
													"source": {
														"path": "['eliminationalgo']"
													},
													"sink": {
														"path": "$['eliminationalgo']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['internalid']"
													},
													"sink": {
														"path": "$['internalid']"
													}
												},
												{
													"source": {
														"path": "['left']"
													},
													"sink": {
														"path": "$['left']"
													}
												},
												{
													"source": {
														"path": "['longname']"
													},
													"sink": {
														"path": "$['longname']"
													}
												},
												{
													"source": {
														"path": "['seqnum']"
													},
													"sink": {
														"path": "$['seqnum']"
													}
												},
												{
													"source": {
														"path": "['usercanchangerevaloption']"
													},
													"sink": {
														"path": "$['usercanchangerevaloption']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_AccountType",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:17:26Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_AccountType')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Accounts to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT id FROM account"
							}
						}
					},
					{
						"name": "ForEach Customer",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 contacts. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages').output.totalResults),mod(int(activity('Get Pages').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\": \"SELECT * FROM account\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['category1099misc']"
													},
													"sink": {
														"path": "$['category1099misc']"
													}
												},
												{
													"source": {
														"path": "['balance']"
													},
													"sink": {
														"path": "$['balance']"
													}
												},
												{
													"source": {
														"path": "['unit']"
													},
													"sink": {
														"path": "$['unit']"
													}
												},
												{
													"source": {
														"path": "['deferralacct']"
													},
													"sink": {
														"path": "$['deferralacct']"
													}
												},
												{
													"source": {
														"path": "['description']"
													},
													"sink": {
														"path": "$['description']"
													}
												},
												{
													"source": {
														"path": "['accountsearchdisplayname']"
													},
													"sink": {
														"path": "$['accountsearchdisplayname']"
													}
												},
												{
													"source": {
														"path": "['displaynamewithhierarchy']"
													},
													"sink": {
														"path": "$['displaynamewithhierarchy']"
													}
												},
												{
													"source": {
														"path": "['eliminate']"
													},
													"sink": {
														"path": "$['eliminate']"
													}
												},
												{
													"source": {
														"path": "['externalid']"
													},
													"sink": {
														"path": "$['externalid']"
													}
												},
												{
													"source": {
														"path": "['fullname']"
													},
													"sink": {
														"path": "$['fullname']"
													}
												},
												{
													"source": {
														"path": "['isinactive']"
													},
													"sink": {
														"path": "$['isinactive']"
													}
												},
												{
													"source": {
														"path": "['includechildren']"
													},
													"sink": {
														"path": "$['includechildren']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['inventory']"
													},
													"sink": {
														"path": "$['inventory']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['legalname']"
													},
													"sink": {
														"path": "$['legalname']"
													}
												},
												{
													"source": {
														"path": "['accountcontextsearch']"
													},
													"sink": {
														"path": "$['accountcontextsearch']"
													}
												},
												{
													"source": {
														"path": "['accountsearchdisplaynamecopy']"
													},
													"sink": {
														"path": "$['accountsearchdisplaynamecopy']"
													}
												},
												{
													"source": {
														"path": "['acctnumber']"
													},
													"sink": {
														"path": "$['acctnumber']"
													}
												},
												{
													"source": {
														"path": "['class']"
													},
													"sink": {
														"path": "$['class']"
													}
												},
												{
													"source": {
														"path": "['department']"
													},
													"sink": {
														"path": "$['department']"
													}
												},
												{
													"source": {
														"path": "['location']"
													},
													"sink": {
														"path": "$['location']"
													}
												},
												{
													"source": {
														"path": "['revalue']"
													},
													"sink": {
														"path": "$['revalue']"
													}
												},
												{
													"source": {
														"path": "['custrecord_fam_account_showinfixedasset']"
													},
													"sink": {
														"path": "$['custrecord_fam_account_showinfixedasset']"
													}
												},
												{
													"source": {
														"path": "['sspecacct']"
													},
													"sink": {
														"path": "$['sspecacct']"
													}
												},
												{
													"source": {
														"path": "['parent']"
													},
													"sink": {
														"path": "$['parent']"
													}
												},
												{
													"source": {
														"path": "['subsidiary']"
													},
													"sink": {
														"path": "$['subsidiary']"
													}
												},
												{
													"source": {
														"path": "['issummary']"
													},
													"sink": {
														"path": "$['issummary']"
													}
												},
												{
													"source": {
														"path": "['billableexpensesacct']"
													},
													"sink": {
														"path": "$['billableexpensesacct']"
													}
												},
												{
													"source": {
														"path": "['accttype']"
													},
													"sink": {
														"path": "$['accttype']"
													}
												},
												{
													"source": {
														"path": "['unitstype']"
													},
													"sink": {
														"path": "$['unitstype']"
													}
												},
												{
													"source": {
														"path": "['reconcilewithmatching']"
													},
													"sink": {
														"path": "$['reconcilewithmatching']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_Account",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:17:20Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_Account')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Assembly Build Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'assemblybuild'"
							}
						}
					},
					{
						"name": "ForEach Customer",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages').output.totalResults),mod(int(activity('Get Pages').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'assemblybuild' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token_copy1').output.token_type,' ',activity('Post Refresh Token_copy1').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtallowworkorderclose']"
													},
													"sink": {
														"path": "$['custbodyhtallowworkorderclose']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtfinishedgoodsproduction']"
													},
													"sink": {
														"path": "$['custbodyhtfinishedgoodsproduction']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtisclosedworkorderbuildunbld']"
													},
													"sink": {
														"path": "$['custbodyhtisclosedworkorderbuildunbld']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtproducionschedulewoline']"
													},
													"sink": {
														"path": "$['custbodyhtproducionschedulewoline']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtproductionschedule']"
													},
													"sink": {
														"path": "$['custbodyhtproductionschedule']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtsalesorder']"
													},
													"sink": {
														"path": "$['custbodyhtsalesorder']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtsalesorderquantity']"
													},
													"sink": {
														"path": "$['custbodyhtsalesorderquantity']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtworkorderttype']"
													},
													"sink": {
														"path": "$['custbodyhtworkorderttype']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_AssemblyBuildHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token_copy1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:17:37Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_AssemblyBuildHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Assembly Unbuild Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'assemblyunbuild'"
							}
						}
					},
					{
						"name": "ForEach Customer",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages').output.totalResults),mod(int(activity('Get Pages').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'assemblyunbuild' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token_copy1').output.token_type,' ',activity('Post Refresh Token_copy1').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbody_reqtanklabel']"
													},
													"sink": {
														"path": "$['custbody_reqtanklabel']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtallowworkorderclose']"
													},
													"sink": {
														"path": "$['custbodyhtallowworkorderclose']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtisclosedworkorderbuildunbld']"
													},
													"sink": {
														"path": "$['custbodyhtisclosedworkorderbuildunbld']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtsalesorder']"
													},
													"sink": {
														"path": "$['custbodyhtsalesorder']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtworkorderttype']"
													},
													"sink": {
														"path": "$['custbodyhtworkorderttype']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isactualprodenddateenteredmanually']"
													},
													"sink": {
														"path": "$['isactualprodenddateenteredmanually']"
													}
												},
												{
													"source": {
														"path": "['isactualprodstartdateenteredmanually']"
													},
													"sink": {
														"path": "$['isactualprodstartdateenteredmanually']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_AssemblyUnbuildHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token_copy1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:17:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_AssemblyUnbuildHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Cash Sale Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'cashsale'"
							}
						}
					},
					{
						"name": "ForEach Cash Sale",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages').output.totalResults),mod(int(activity('Get Pages').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'cashsale' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token_copy1').output.token_type,' ',activity('Post Refresh Token_copy1').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbody_reqtanklabel']"
													},
													"sink": {
														"path": "$['custbody_reqtanklabel']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtallowworkorderclose']"
													},
													"sink": {
														"path": "$['custbodyhtallowworkorderclose']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtisclosedworkorderbuildunbld']"
													},
													"sink": {
														"path": "$['custbodyhtisclosedworkorderbuildunbld']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtsalesorder']"
													},
													"sink": {
														"path": "$['custbodyhtsalesorder']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtworkorderttype']"
													},
													"sink": {
														"path": "$['custbodyhtworkorderttype']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isactualprodenddateenteredmanually']"
													},
													"sink": {
														"path": "$['isactualprodenddateenteredmanually']"
													}
												},
												{
													"source": {
														"path": "['isactualprodstartdateenteredmanually']"
													},
													"sink": {
														"path": "$['isactualprodstartdateenteredmanually']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_CashSaleHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token_copy1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:17:49Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_CashSaleHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Check Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Check, Credit Memo, Deposit, and Deposit Application",
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages Check",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'check'"
							}
						}
					},
					{
						"name": "ForEach Check",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Check",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Check').output.totalResults),mod(int(activity('Get Pages Check').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Check",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'check' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Check').output.token_type,' ',activity('Post Refresh Token - Check').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['accountbasednumber']"
													},
													"sink": {
														"path": "$['accountbasednumber']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_CheckHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Check",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Pages Credit Memo",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'creditmemo'"
							}
						}
					},
					{
						"name": "ForEach Credit Memo",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Credit Memo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Credit Memo').output.totalResults),mod(int(activity('Get Pages Credit Memo').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Credit Memo",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Credit Memo",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'creditmemo' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Credit Memo').output.token_type,' ',activity('Post Refresh Token - Credit Memo').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['links']"
													},
													"sink": {
														"path": "$['links']"
													}
												},
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingaddress']"
													},
													"sink": {
														"path": "$['billingaddress']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['closedate']"
													},
													"sink": {
														"path": "$['closedate']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_asaporder_bodyfield']"
													},
													"sink": {
														"path": "$['custbodyht_asaporder_bodyfield']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_barcode']"
													},
													"sink": {
														"path": "$['custbodyht_barcode']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_boltobeprinted_tranbdy']"
													},
													"sink": {
														"path": "$['custbodyht_boltobeprinted_tranbdy']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_callbeforeshipping_bodyfld']"
													},
													"sink": {
														"path": "$['custbodyht_callbeforeshipping_bodyfld']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_certificationrequirement']"
													},
													"sink": {
														"path": "$['custbodyht_certificationrequirement']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_checkbookflag']"
													},
													"sink": {
														"path": "$['custbodyht_checkbookflag']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_ishistoricaltransaction']"
													},
													"sink": {
														"path": "$['custbodyht_ishistoricaltransaction']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_ordersfulyscheduled_tranbdy']"
													},
													"sink": {
														"path": "$['custbodyht_ordersfulyscheduled_tranbdy']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_proformaprinted']"
													},
													"sink": {
														"path": "$['custbodyht_proformaprinted']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_returnauthtype']"
													},
													"sink": {
														"path": "$['custbodyht_returnauthtype']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_rganotes']"
													},
													"sink": {
														"path": "$['custbodyht_rganotes']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_salesorderprocessing']"
													},
													"sink": {
														"path": "$['custbodyht_salesorderprocessing']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_shipper']"
													},
													"sink": {
														"path": "$['custbodyht_shipper']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_takeoffbonus']"
													},
													"sink": {
														"path": "$['custbodyht_takeoffbonus']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtfreightchargepreferences']"
													},
													"sink": {
														"path": "$['custbodyhtfreightchargepreferences']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtisconsignment']"
													},
													"sink": {
														"path": "$['custbodyhtisconsignment']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtrgareadytocredit']"
													},
													"sink": {
														"path": "$['custbodyhtrgareadytocredit']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtspecialpackaging']"
													},
													"sink": {
														"path": "$['custbodyhtspecialpackaging']"
													}
												},
												{
													"source": {
														"path": "['daysopen']"
													},
													"sink": {
														"path": "$['daysopen']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['fax']"
													},
													"sink": {
														"path": "$['fax']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['memo']"
													},
													"sink": {
														"path": "$['memo']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['shipcomplete']"
													},
													"sink": {
														"path": "$['shipcomplete']"
													}
												},
												{
													"source": {
														"path": "['shippingaddress']"
													},
													"sink": {
														"path": "$['shippingaddress']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_CreditMemoHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Credit Memo",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Pages Deposit",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'deposit'"
							}
						}
					},
					{
						"name": "ForEach Deposit",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Deposit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Deposit').output.totalResults),mod(int(activity('Get Pages Deposit').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Deposit",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Deposit",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'deposit' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Deposit').output.token_type,' ',activity('Post Refresh Token - Deposit').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_DepositHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Deposit",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Pages Deposit Application",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'depositapplication'"
							}
						}
					},
					{
						"name": "ForEach Deposit Application",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Deposit Application",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Deposit Application').output.totalResults),mod(int(activity('Get Pages Deposit Application').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Deposit Application",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Deposit Application",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'depositapplication' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Deposit Application').output.token_type,' ',activity('Post Refresh Token - Deposit Application').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['closedate']"
													},
													"sink": {
														"path": "$['closedate']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbody_9997_autocash_assertion_field']"
													},
													"sink": {
														"path": "$['custbody_9997_autocash_assertion_field']"
													}
												},
												{
													"source": {
														"path": "['custbody_9997_is_for_ep_dd']"
													},
													"sink": {
														"path": "$['custbody_9997_is_for_ep_dd']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['daysopen']"
													},
													"sink": {
														"path": "$['daysopen']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_DepositApplicationHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Deposit Application",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:17:57Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_CheckHead')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_CreditMemoHead')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_DepositHead')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_DepositApplicationHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Contacts to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages Contacts",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT id FROM contact"
							}
						}
					},
					{
						"name": "ForEach Customer",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 contacts. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Contacts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Contacts').output.totalResults),mod(int(activity('Get Pages Contacts').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\": \"SELECT * FROM contact\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['addressbook']"
													},
													"sink": {
														"path": "$['addressbook']"
													}
												},
												{
													"source": {
														"path": "['altemail']"
													},
													"sink": {
														"path": "$['altemail']"
													}
												},
												{
													"source": {
														"path": "['assistantphone']"
													},
													"sink": {
														"path": "$['assistantphone']"
													}
												},
												{
													"source": {
														"path": "['assistant']"
													},
													"sink": {
														"path": "$['assistant']"
													}
												},
												{
													"source": {
														"path": "['bulkmerge']"
													},
													"sink": {
														"path": "$['bulkmerge']"
													}
												},
												{
													"source": {
														"path": "['category']"
													},
													"sink": {
														"path": "$['category']"
													}
												},
												{
													"source": {
														"path": "['comments']"
													},
													"sink": {
														"path": "$['comments']"
													}
												},
												{
													"source": {
														"path": "['company']"
													},
													"sink": {
														"path": "$['company']"
													}
												},
												{
													"source": {
														"path": "['isinactive']"
													},
													"sink": {
														"path": "$['isinactive']"
													}
												},
												{
													"source": {
														"path": "['datecreated']"
													},
													"sink": {
														"path": "$['datecreated']"
													}
												},
												{
													"source": {
														"path": "['defaultbillingaddress']"
													},
													"sink": {
														"path": "$['defaultbillingaddress']"
													}
												},
												{
													"source": {
														"path": "['defaultshippingaddress']"
													},
													"sink": {
														"path": "$['defaultshippingaddress']"
													}
												},
												{
													"source": {
														"path": "['duplicate']"
													},
													"sink": {
														"path": "$['duplicate']"
													}
												},
												{
													"source": {
														"path": "['email']"
													},
													"sink": {
														"path": "$['email']"
													}
												},
												{
													"source": {
														"path": "['entityid']"
													},
													"sink": {
														"path": "$['entityid']"
													}
												},
												{
													"source": {
														"path": "['externalid']"
													},
													"sink": {
														"path": "$['externalid']"
													}
												},
												{
													"source": {
														"path": "['fax']"
													},
													"sink": {
														"path": "$['fax']"
													}
												},
												{
													"source": {
														"path": "['firstname']"
													},
													"sink": {
														"path": "$['firstname']"
													}
												},
												{
													"source": {
														"path": "['homephone']"
													},
													"sink": {
														"path": "$['homephone']"
													}
												},
												{
													"source": {
														"path": "['custentityht_sendbulkemail']"
													},
													"sink": {
														"path": "$['custentityht_sendbulkemail']"
													}
												},
												{
													"source": {
														"path": "['custentityht_sendpricing']"
													},
													"sink": {
														"path": "$['custentityht_sendpricing']"
													}
												},
												{
													"source": {
														"path": "['custentityht_sendservey']"
													},
													"sink": {
														"path": "$['custentityht_sendservey']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['title']"
													},
													"sink": {
														"path": "$['title']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['lastname']"
													},
													"sink": {
														"path": "$['lastname']"
													}
												},
												{
													"source": {
														"path": "['custentity_date_lsa']"
													},
													"sink": {
														"path": "$['custentity_date_lsa']"
													}
												},
												{
													"source": {
														"path": "['contactsource']"
													},
													"sink": {
														"path": "$['contactsource']"
													}
												},
												{
													"source": {
														"path": "['custentity_link_lsa']"
													},
													"sink": {
														"path": "$['custentity_link_lsa']"
													}
												},
												{
													"source": {
														"path": "['custentity_link_name_lsa']"
													},
													"sink": {
														"path": "$['custentity_link_name_lsa']"
													}
												},
												{
													"source": {
														"path": "['phone']"
													},
													"sink": {
														"path": "$['phone']"
													}
												},
												{
													"source": {
														"path": "['middlename']"
													},
													"sink": {
														"path": "$['middlename']"
													}
												},
												{
													"source": {
														"path": "['mobilephone']"
													},
													"sink": {
														"path": "$['mobilephone']"
													}
												},
												{
													"source": {
														"path": "['salutation']"
													},
													"sink": {
														"path": "$['salutation']"
													}
												},
												{
													"source": {
														"path": "['entitytitle']"
													},
													"sink": {
														"path": "$['entitytitle']"
													}
												},
												{
													"source": {
														"path": "['officephone']"
													},
													"sink": {
														"path": "$['officephone']"
													}
												},
												{
													"source": {
														"path": "['isprivate']"
													},
													"sink": {
														"path": "$['isprivate']"
													}
												},
												{
													"source": {
														"path": "['supervisorphone']"
													},
													"sink": {
														"path": "$['supervisorphone']"
													}
												},
												{
													"source": {
														"path": "['supervisor']"
													},
													"sink": {
														"path": "$['supervisor']"
													}
												},
												{
													"source": {
														"path": "['usernotes']"
													},
													"sink": {
														"path": "$['usernotes']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_Contacts",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:17:12Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_Contacts')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Customer Transaction Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Customer Deposits, Customer Payments, and Customer Refunds",
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages Customer Deposit",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'customerdeposit'"
							}
						}
					},
					{
						"name": "ForEach Customer Deposit",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Customer Deposit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Customer Deposit').output.totalResults),mod(int(activity('Get Pages Customer Deposit').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Customer Depoit",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Customer Deposit",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'customerdeposit' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Customer Deposit').output.token_type,' ',activity('Post Refresh Token - Customer Deposit').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbody_9997_autocash_assertion_field']"
													},
													"sink": {
														"path": "$['custbody_9997_autocash_assertion_field']"
													}
												},
												{
													"source": {
														"path": "['custbody_9997_is_for_ep_dd']"
													},
													"sink": {
														"path": "$['custbody_9997_is_for_ep_dd']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['daysopen']"
													},
													"sink": {
														"path": "$['daysopen']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['paymentmethod']"
													},
													"sink": {
														"path": "$['paymentmethod']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_CustomerDepositHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Customer Deposit",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Pages Customer Payment",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'customerpayment'"
							}
						}
					},
					{
						"name": "ForEach Customer Payment",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Customer Payment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Customer Payment').output.totalResults),mod(int(activity('Get Pages Customer Payment').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Customer Payment",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Customer Payment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'customerpayment' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Customer Payment').output.token_type,' ',activity('Post Refresh Token - Customer Payment').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['closedate']"
													},
													"sink": {
														"path": "$['closedate']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['daysopen']"
													},
													"sink": {
														"path": "$['daysopen']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['otherrefnum']"
													},
													"sink": {
														"path": "$['otherrefnum']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['paymentmethod']"
													},
													"sink": {
														"path": "$['paymentmethod']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_CustomerPaymentsHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Customer Payment",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Pages Customer Refund",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'customerrefund'"
							}
						}
					},
					{
						"name": "ForEach Customer Refund",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Customer Refund",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Customer Refund').output.totalResults),mod(int(activity('Get Pages Customer Refund').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Customer Refund",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Customer Refund",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'customerrefund' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Customer Refund').output.token_type,' ',activity('Post Refresh Token - Customer Refund').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['accountbasednumber']"
													},
													"sink": {
														"path": "$['accountbasednumber']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['closedate']"
													},
													"sink": {
														"path": "$['closedate']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbody_9997_autocash_assertion_field']"
													},
													"sink": {
														"path": "$['custbody_9997_autocash_assertion_field']"
													}
												},
												{
													"source": {
														"path": "['custbody_9997_is_for_ep_dd']"
													},
													"sink": {
														"path": "$['custbody_9997_is_for_ep_dd']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['paymentmethod']"
													},
													"sink": {
														"path": "$['paymentmethod']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_CustomerRefundHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Customer Refund",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:18:03Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_CustomerDepositHead')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_CustomerPaymentsHead')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_CustomerRefundHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Customers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages Customers",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT id FROM customer"
							}
						}
					},
					{
						"name": "ForEach Customer",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Customers').output.totalResults),mod(int(activity('Get Pages Customers').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\": \"SELECT * FROM customer\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['assetaccount']"
													},
													"sink": {
														"path": "$['assetaccount']"
													}
												},
												{
													"source": {
														"path": "['atpmethod']"
													},
													"sink": {
														"path": "$['atpmethod']"
													}
												},
												{
													"source": {
														"path": "['averagecost']"
													},
													"sink": {
														"path": "$['averagecost']"
													}
												},
												{
													"source": {
														"path": "['billpricevarianceacct']"
													},
													"sink": {
														"path": "$['billpricevarianceacct']"
													}
												},
												{
													"source": {
														"path": "['billqtyvarianceacct']"
													},
													"sink": {
														"path": "$['billqtyvarianceacct']"
													}
												},
												{
													"source": {
														"path": "['buildentireassembly']"
													},
													"sink": {
														"path": "$['buildentireassembly']"
													}
												},
												{
													"source": {
														"path": "['consumptionunit']"
													},
													"sink": {
														"path": "$['consumptionunit']"
													}
												},
												{
													"source": {
														"path": "['copydescription']"
													},
													"sink": {
														"path": "$['copydescription']"
													}
												},
												{
													"source": {
														"path": "['costingmethod']"
													},
													"sink": {
														"path": "$['costingmethod']"
													}
												},
												{
													"source": {
														"path": "['costingmethoddisplay']"
													},
													"sink": {
														"path": "$['costingmethoddisplay']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['custitem_demandcadence']"
													},
													"sink": {
														"path": "$['custitem_demandcadence']"
													}
												},
												{
													"source": {
														"path": "['custitem_ht_item_line']"
													},
													"sink": {
														"path": "$['custitem_ht_item_line']"
													}
												},
												{
													"source": {
														"path": "['custitem_htskidqty']"
													},
													"sink": {
														"path": "$['custitem_htskidqty']"
													}
												},
												{
													"source": {
														"path": "['custitem_reqtanklabel']"
													},
													"sink": {
														"path": "$['custitem_reqtanklabel']"
													}
												},
												{
													"source": {
														"path": "['custitemht_additionaltankdetailneeded']"
													},
													"sink": {
														"path": "$['custitemht_additionaltankdetailneeded']"
													}
												},
												{
													"source": {
														"path": "['custitemht_buildtostock']"
													},
													"sink": {
														"path": "$['custitemht_buildtostock']"
													}
												},
												{
													"source": {
														"path": "['custitemht_preprocessingrequired']"
													},
													"sink": {
														"path": "$['custitemht_preprocessingrequired']"
													}
												},
												{
													"source": {
														"path": "['custitemht_pricingneeded']"
													},
													"sink": {
														"path": "$['custitemht_pricingneeded']"
													}
												},
												{
													"source": {
														"path": "['custitemht_productline']"
													},
													"sink": {
														"path": "$['custitemht_productline']"
													}
												},
												{
													"source": {
														"path": "['custitemht_tankbracketfoot']"
													},
													"sink": {
														"path": "$['custitemht_tankbracketfoot']"
													}
												},
												{
													"source": {
														"path": "['custitemht_tanktypepricing']"
													},
													"sink": {
														"path": "$['custitemht_tanktypepricing']"
													}
												},
												{
													"source": {
														"path": "['custitemhtdrawingurl']"
													},
													"sink": {
														"path": "$['custitemhtdrawingurl']"
													}
												},
												{
													"source": {
														"path": "['custitemhtitemtype']"
													},
													"sink": {
														"path": "$['custitemhtitemtype']"
													}
												},
												{
													"source": {
														"path": "['custitemhtlayoutdrawingurl']"
													},
													"sink": {
														"path": "$['custitemhtlayoutdrawingurl']"
													}
												},
												{
													"source": {
														"path": "['custitemhttankbodylength']"
													},
													"sink": {
														"path": "$['custitemhttankbodylength']"
													}
												},
												{
													"source": {
														"path": "['custitemhttankbonuspoints']"
													},
													"sink": {
														"path": "$['custitemhttankbonuspoints']"
													}
												},
												{
													"source": {
														"path": "['custitemhttankcoatingexterior']"
													},
													"sink": {
														"path": "$['custitemhttankcoatingexterior']"
													}
												},
												{
													"source": {
														"path": "['custitemhttankcoatinginterior']"
													},
													"sink": {
														"path": "$['custitemhttankcoatinginterior']"
													}
												},
												{
													"source": {
														"path": "['custitemhttankhead']"
													},
													"sink": {
														"path": "$['custitemhttankhead']"
													}
												},
												{
													"source": {
														"path": "['custitemhttankmainbodyport']"
													},
													"sink": {
														"path": "$['custitemhttankmainbodyport']"
													}
												},
												{
													"source": {
														"path": "['custitemhttankseries']"
													},
													"sink": {
														"path": "$['custitemhttankseries']"
													}
												},
												{
													"source": {
														"path": "['custitemhttanktype']"
													},
													"sink": {
														"path": "$['custitemhttanktype']"
													}
												},
												{
													"source": {
														"path": "['description']"
													},
													"sink": {
														"path": "$['description']"
													}
												},
												{
													"source": {
														"path": "['displayname']"
													},
													"sink": {
														"path": "$['displayname']"
													}
												},
												{
													"source": {
														"path": "['dontshowprice']"
													},
													"sink": {
														"path": "$['dontshowprice']"
													}
												},
												{
													"source": {
														"path": "['effectivebomcontrol']"
													},
													"sink": {
														"path": "$['effectivebomcontrol']"
													}
												},
												{
													"source": {
														"path": "['enforceminqtyinternally']"
													},
													"sink": {
														"path": "$['enforceminqtyinternally']"
													}
												},
												{
													"source": {
														"path": "['excludefromsitemap']"
													},
													"sink": {
														"path": "$['excludefromsitemap']"
													}
												},
												{
													"source": {
														"path": "['expenseaccount']"
													},
													"sink": {
														"path": "$['expenseaccount']"
													}
												},
												{
													"source": {
														"path": "['froogleproductfeed']"
													},
													"sink": {
														"path": "$['froogleproductfeed']"
													}
												},
												{
													"source": {
														"path": "['fullname']"
													},
													"sink": {
														"path": "$['fullname']"
													}
												},
												{
													"source": {
														"path": "['generateaccruals']"
													},
													"sink": {
														"path": "$['generateaccruals']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includechildren']"
													},
													"sink": {
														"path": "$['includechildren']"
													}
												},
												{
													"source": {
														"path": "['incomeaccount']"
													},
													"sink": {
														"path": "$['incomeaccount']"
													}
												},
												{
													"source": {
														"path": "['isdonationitem']"
													},
													"sink": {
														"path": "$['isdonationitem']"
													}
												},
												{
													"source": {
														"path": "['isdropshipitem']"
													},
													"sink": {
														"path": "$['isdropshipitem']"
													}
												},
												{
													"source": {
														"path": "['isfulfillable']"
													},
													"sink": {
														"path": "$['isfulfillable']"
													}
												},
												{
													"source": {
														"path": "['isinactive']"
													},
													"sink": {
														"path": "$['isinactive']"
													}
												},
												{
													"source": {
														"path": "['islotitem']"
													},
													"sink": {
														"path": "$['islotitem']"
													}
												},
												{
													"source": {
														"path": "['isonline']"
													},
													"sink": {
														"path": "$['isonline']"
													}
												},
												{
													"source": {
														"path": "['isphantom']"
													},
													"sink": {
														"path": "$['isphantom']"
													}
												},
												{
													"source": {
														"path": "['isspecialorderitem']"
													},
													"sink": {
														"path": "$['isspecialorderitem']"
													}
												},
												{
													"source": {
														"path": "['isspecialworkorderitem']"
													},
													"sink": {
														"path": "$['isspecialworkorderitem']"
													}
												},
												{
													"source": {
														"path": "['itemid']"
													},
													"sink": {
														"path": "$['itemid']"
													}
												},
												{
													"source": {
														"path": "['itemtype']"
													},
													"sink": {
														"path": "$['itemtype']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['lastpurchaseprice']"
													},
													"sink": {
														"path": "$['lastpurchaseprice']"
													}
												},
												{
													"source": {
														"path": "['matchbilltoreceipt']"
													},
													"sink": {
														"path": "$['matchbilltoreceipt']"
													}
												},
												{
													"source": {
														"path": "['nextagproductfeed']"
													},
													"sink": {
														"path": "$['nextagproductfeed']"
													}
												},
												{
													"source": {
														"path": "['preferredlocation']"
													},
													"sink": {
														"path": "$['preferredlocation']"
													}
												},
												{
													"source": {
														"path": "['printitems']"
													},
													"sink": {
														"path": "$['printitems']"
													}
												},
												{
													"source": {
														"path": "['purchaseunit']"
													},
													"sink": {
														"path": "$['purchaseunit']"
													}
												},
												{
													"source": {
														"path": "['roundupascomponent']"
													},
													"sink": {
														"path": "$['roundupascomponent']"
													}
												},
												{
													"source": {
														"path": "['saleunit']"
													},
													"sink": {
														"path": "$['saleunit']"
													}
												},
												{
													"source": {
														"path": "['seasonaldemand']"
													},
													"sink": {
														"path": "$['seasonaldemand']"
													}
												},
												{
													"source": {
														"path": "['shipindividually']"
													},
													"sink": {
														"path": "$['shipindividually']"
													}
												},
												{
													"source": {
														"path": "['shoppingproductfeed']"
													},
													"sink": {
														"path": "$['shoppingproductfeed']"
													}
												},
												{
													"source": {
														"path": "['shopzillaproductfeed']"
													},
													"sink": {
														"path": "$['shopzillaproductfeed']"
													}
												},
												{
													"source": {
														"path": "['showdefaultdonationamount']"
													},
													"sink": {
														"path": "$['showdefaultdonationamount']"
													}
												},
												{
													"source": {
														"path": "['stockdescription']"
													},
													"sink": {
														"path": "$['stockdescription']"
													}
												},
												{
													"source": {
														"path": "['stockunit']"
													},
													"sink": {
														"path": "$['stockunit']"
													}
												},
												{
													"source": {
														"path": "['subsidiary']"
													},
													"sink": {
														"path": "$['subsidiary']"
													}
												},
												{
													"source": {
														"path": "['supplyreplenishmentmethod']"
													},
													"sink": {
														"path": "$['supplyreplenishmentmethod']"
													}
												},
												{
													"source": {
														"path": "['totalquantityonhand']"
													},
													"sink": {
														"path": "$['totalquantityonhand']"
													}
												},
												{
													"source": {
														"path": "['totalvalue']"
													},
													"sink": {
														"path": "$['totalvalue']"
													}
												},
												{
													"source": {
														"path": "['unitstype']"
													},
													"sink": {
														"path": "$['unitstype']"
													}
												},
												{
													"source": {
														"path": "['usecomponentyield']"
													},
													"sink": {
														"path": "$['usecomponentyield']"
													}
												},
												{
													"source": {
														"path": "['usemarginalrates']"
													},
													"sink": {
														"path": "$['usemarginalrates']"
													}
												},
												{
													"source": {
														"path": "['weight']"
													},
													"sink": {
														"path": "$['weight']"
													}
												},
												{
													"source": {
														"path": "['weightunit']"
													},
													"sink": {
														"path": "$['weightunit']"
													}
												},
												{
													"source": {
														"path": "['weightunits']"
													},
													"sink": {
														"path": "$['weightunits']"
													}
												},
												{
													"source": {
														"path": "['yahooproductfeed']"
													},
													"sink": {
														"path": "$['yahooproductfeed']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_Customers",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:17:09Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_Customers')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Inventory Transaction Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages Inventory Adjustment",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'inventoryadjustment'"
							}
						}
					},
					{
						"name": "ForEach Inventory Adjustment",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Inventory Adjustment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Inventory Adjustment').output.totalResults),mod(int(activity('Get Pages Inventory Adjustment').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Inventory Adjustment",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Inventory Adjustment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'inventoryadjustment' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Inventory Adjustment').output.token_type,' ',activity('Post Refresh Token - Inventory Adjustment').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtfinishedgoodsproduction']"
													},
													"sink": {
														"path": "$['custbodyhtfinishedgoodsproduction']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['memo']"
													},
													"sink": {
														"path": "$['memo']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_InventoryAdjustmentHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Inventory Adjustment",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Pages Inventory Transfer",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'inventorytransfer'"
							}
						}
					},
					{
						"name": "ForEach Inventory Transfer",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Inventory Transfer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Inventory Transfer').output.totalResults),mod(int(activity('Get Pages Inventory Transfer').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Inventory Transfer",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Inventory Transfer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'inventorytransfer' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Inventory Transfer').output.token_type,' ',activity('Post Refresh Token - Inventory Transfer').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtfinishedgoodsproduction']"
													},
													"sink": {
														"path": "$['custbodyhtfinishedgoodsproduction']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['memo']"
													},
													"sink": {
														"path": "$['memo']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_InventoryTransferHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Inventory Transfer",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Pages Inventory Worksheet",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'inventoryworksheet'"
							}
						}
					},
					{
						"name": "ForEach Inventory Worksheet",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Inventory Worksheet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Inventory Worksheet').output.totalResults),mod(int(activity('Get Pages Inventory Worksheet').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Inventory Worksheet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Inventory Worksheet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'inventoryworksheet' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Inventory Worksheet').output.token_type,' ',activity('Post Refresh Token - Inventory Worksheet').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_InventoryWorksheetHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Inventory Worksheet",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:18:06Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_InventoryAdjustmentHead')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_InventoryTransferHead')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_InventoryWorksheetHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Invoice Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages Invoice",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'invoice'"
							}
						}
					},
					{
						"name": "ForEach Invoice",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Invoice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Invoice').output.totalResults),mod(int(activity('Get Pages Invoice').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Inventory Transfer",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Invoice",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'invoice' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Invoice').output.token_type,' ',activity('Post Refresh Token - Invoice').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingaddress']"
													},
													"sink": {
														"path": "$['billingaddress']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['closedate']"
													},
													"sink": {
														"path": "$['closedate']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_asaporder_bodyfield']"
													},
													"sink": {
														"path": "$['custbodyht_asaporder_bodyfield']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_boltobeprinted_tranbdy']"
													},
													"sink": {
														"path": "$['custbodyht_boltobeprinted_tranbdy']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_callbeforeshipping_bodyfld']"
													},
													"sink": {
														"path": "$['custbodyht_callbeforeshipping_bodyfld']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_confirmto']"
													},
													"sink": {
														"path": "$['custbodyht_confirmto']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_ordersfulyscheduled_tranbdy']"
													},
													"sink": {
														"path": "$['custbodyht_ordersfulyscheduled_tranbdy']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_shipper']"
													},
													"sink": {
														"path": "$['custbodyht_shipper']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtfreightchargepreferences']"
													},
													"sink": {
														"path": "$['custbodyhtfreightchargepreferences']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtproductiondate']"
													},
													"sink": {
														"path": "$['custbodyhtproductiondate']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtspecialpackaging']"
													},
													"sink": {
														"path": "$['custbodyhtspecialpackaging']"
													}
												},
												{
													"source": {
														"path": "['daysopen']"
													},
													"sink": {
														"path": "$['daysopen']"
													}
												},
												{
													"source": {
														"path": "['daysoverduesearch']"
													},
													"sink": {
														"path": "$['daysoverduesearch']"
													}
												},
												{
													"source": {
														"path": "['duedate']"
													},
													"sink": {
														"path": "$['duedate']"
													}
												},
												{
													"source": {
														"path": "['email']"
													},
													"sink": {
														"path": "$['email']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['fax']"
													},
													"sink": {
														"path": "$['fax']"
													}
												},
												{
													"source": {
														"path": "['foreignamountpaid']"
													},
													"sink": {
														"path": "$['foreignamountpaid']"
													}
												},
												{
													"source": {
														"path": "['foreignamountunpaid']"
													},
													"sink": {
														"path": "$['foreignamountunpaid']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['otherrefnum']"
													},
													"sink": {
														"path": "$['otherrefnum']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['shipcomplete']"
													},
													"sink": {
														"path": "$['shipcomplete']"
													}
												},
												{
													"source": {
														"path": "['shipdate']"
													},
													"sink": {
														"path": "$['shipdate']"
													}
												},
												{
													"source": {
														"path": "['shippingaddress']"
													},
													"sink": {
														"path": "$['shippingaddress']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['terms']"
													},
													"sink": {
														"path": "$['terms']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_InvoiceHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Invoice",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:18:10Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_InvoiceHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Item Transaction Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Item Fulfillment and Item Receipt",
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages Item Fulfillment",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'itemfulfillment'"
							}
						}
					},
					{
						"name": "ForEach Item Fulfillment",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Item Fulfillment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Item Fulfillment').output.totalResults),mod(int(activity('Get Pages Item Fulfillment').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Item Fulfillment",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Item Fulfillment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'itemfulfillment' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Item Fulfillment').output.token_type,' ',activity('Post Refresh Token - Item Fulfillment').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingaddress']"
													},
													"sink": {
														"path": "$['billingaddress']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbody_bol_from_address']"
													},
													"sink": {
														"path": "$['custbody_bol_from_address']"
													}
												},
												{
													"source": {
														"path": "['custbody_bol_fulfillment_weight_unit']"
													},
													"sink": {
														"path": "$['custbody_bol_fulfillment_weight_unit']"
													}
												},
												{
													"source": {
														"path": "['custbody_bol_fullfilment_weight']"
													},
													"sink": {
														"path": "$['custbody_bol_fullfilment_weight']"
													}
												},
												{
													"source": {
														"path": "['custbody_bol_printed']"
													},
													"sink": {
														"path": "$['custbody_bol_printed']"
													}
												},
												{
													"source": {
														"path": "['custbody_bol_total_item_weight']"
													},
													"sink": {
														"path": "$['custbody_bol_total_item_weight']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['memo']"
													},
													"sink": {
														"path": "$['memo']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['shippingaddress']"
													},
													"sink": {
														"path": "$['shippingaddress']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_ItemFulfillmentHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Item Fulfillment",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Pages Item Receipt",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'itemreceipt'"
							}
						}
					},
					{
						"name": "ForEach Item Receipt",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Item Receipt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Item Receipt').output.totalResults),mod(int(activity('Get Pages Item Receipt').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Inventory Transfer_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Item Receipt",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'itemreceipt' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Item Receipt').output.token_type,' ',activity('Post Refresh Token - Item Receipt').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['employee']"
													},
													"sink": {
														"path": "$['employee']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_ItemReceiptHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Item Receipt",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:18:14Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_ItemFulfillmentHead')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_ItemReceiptHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Journal Entry Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages Journal Entry",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'journalentry'"
							}
						}
					},
					{
						"name": "ForEach Journal Entry",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Journal Entry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Journal Entry').output.totalResults),mod(int(activity('Get Pages Journal Entry').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Journal Entry",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Journal Entry",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'journalentry' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Journal Entry').output.token_type,' ',activity('Post Refresh Token - Journal Entry').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_JournalEntryHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Journal Entry",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:18:21Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_JournalEntryHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Purchase Order Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages Purchase Order",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'purchaseorder'"
							}
						}
					},
					{
						"name": "ForEach Purchase Order",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Purchase Order",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Purchase Order').output.totalResults),mod(int(activity('Get Pages Purchase Order').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Purchase Order",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Purchase Order",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'purchaseorder' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Purchase Order').output.token_type,' ',activity('Post Refresh Token - Purchase Order').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['actualshipdate']"
													},
													"sink": {
														"path": "$['actualshipdate']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingaddress']"
													},
													"sink": {
														"path": "$['billingaddress']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['closedate']"
													},
													"sink": {
														"path": "$['closedate']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_poconfirmed']"
													},
													"sink": {
														"path": "$['custbodyht_poconfirmed']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['daysopen']"
													},
													"sink": {
														"path": "$['daysopen']"
													}
												},
												{
													"source": {
														"path": "['employee']"
													},
													"sink": {
														"path": "$['employee']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['firmed']"
													},
													"sink": {
														"path": "$['firmed']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['shipdate']"
													},
													"sink": {
														"path": "$['shipdate']"
													}
												},
												{
													"source": {
														"path": "['shippingaddress']"
													},
													"sink": {
														"path": "$['shippingaddress']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_PurchaseOrderHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Purchase Order",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:18:26Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_PurchaseOrderHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Return Authorization Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages Return Authorization",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'returnauthorization'"
							}
						}
					},
					{
						"name": "ForEach Return Authorization",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 customers. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Return Authorization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Return Authorization').output.totalResults),mod(int(activity('Get Pages Return Authorization').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake - Inventory Transfer",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Post Refresh Token - Return Authorization",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'invoice' ORDER BY 'createddate'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token - Return Authorization').output.token_type,' ',activity('Post Refresh Token - Return Authorization').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingaddress']"
													},
													"sink": {
														"path": "$['billingaddress']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['closedate']"
													},
													"sink": {
														"path": "$['closedate']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_asaporder_bodyfield']"
													},
													"sink": {
														"path": "$['custbodyht_asaporder_bodyfield']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_boltobeprinted_tranbdy']"
													},
													"sink": {
														"path": "$['custbodyht_boltobeprinted_tranbdy']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_callbeforeshipping_bodyfld']"
													},
													"sink": {
														"path": "$['custbodyht_callbeforeshipping_bodyfld']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_confirmto']"
													},
													"sink": {
														"path": "$['custbodyht_confirmto']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_ordersfulyscheduled_tranbdy']"
													},
													"sink": {
														"path": "$['custbodyht_ordersfulyscheduled_tranbdy']"
													}
												},
												{
													"source": {
														"path": "['custbodyht_shipper']"
													},
													"sink": {
														"path": "$['custbodyht_shipper']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtfreightchargepreferences']"
													},
													"sink": {
														"path": "$['custbodyhtfreightchargepreferences']"
													}
												},
												{
													"source": {
														"path": "['custbodyhthaschangeorders']"
													},
													"sink": {
														"path": "$['custbodyhthaschangeorders']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtproductiondate']"
													},
													"sink": {
														"path": "$['custbodyhtproductiondate']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtspecialpackaging']"
													},
													"sink": {
														"path": "$['custbodyhtspecialpackaging']"
													}
												},
												{
													"source": {
														"path": "['daysopen']"
													},
													"sink": {
														"path": "$['daysopen']"
													}
												},
												{
													"source": {
														"path": "['daysoverduesearch']"
													},
													"sink": {
														"path": "$['daysoverduesearch']"
													}
												},
												{
													"source": {
														"path": "['duedate']"
													},
													"sink": {
														"path": "$['duedate']"
													}
												},
												{
													"source": {
														"path": "['email']"
													},
													"sink": {
														"path": "$['email']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['fax']"
													},
													"sink": {
														"path": "$['fax']"
													}
												},
												{
													"source": {
														"path": "['foreignamountpaid']"
													},
													"sink": {
														"path": "$['foreignamountpaid']"
													}
												},
												{
													"source": {
														"path": "['foreignamountunpaid']"
													},
													"sink": {
														"path": "$['foreignamountunpaid']"
													}
												},
												{
													"source": {
														"path": "['foreigntotal']"
													},
													"sink": {
														"path": "$['foreigntotal']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['otherrefnum']"
													},
													"sink": {
														"path": "$['otherrefnum']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['shipcomplete']"
													},
													"sink": {
														"path": "$['shipcomplete']"
													}
												},
												{
													"source": {
														"path": "['shipdate']"
													},
													"sink": {
														"path": "$['shipdate']"
													}
												},
												{
													"source": {
														"path": "['shippingaddress']"
													},
													"sink": {
														"path": "$['shippingaddress']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['terms']"
													},
													"sink": {
														"path": "$['terms']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_ReturnAuthorizationHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token - Return Authorization",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ', variables('auth'))",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:18:31Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_ReturnAuthorizationHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Sales Order Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Set Access Token",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "access_token",
							"value": {
								"value": "@activity('Post Refresh Token').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Query String",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "query_string",
							"value": "{\"q\": \"SELECT *  FROM Transaction WHERE recordtype LIKE 'salesorder' ORDER BY 'createddate'\"}"
						}
					},
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Query String",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Page Array",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('pages')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@{variables('query_string')}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat('Bearer ',variables('access_token'))",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "setOfObjects"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['accountnumber']"
													},
													"sink": {
														"path": "$['accountnumber']"
													}
												},
												{
													"source": {
														"path": "['addressbook']"
													},
													"sink": {
														"path": "$['addressbook']"
													}
												},
												{
													"source": {
														"path": "['alcoholrecipienttype']"
													},
													"sink": {
														"path": "$['alcoholrecipienttype']"
													}
												},
												{
													"source": {
														"path": "['altemail']"
													},
													"sink": {
														"path": "$['altemail']"
													}
												},
												{
													"source": {
														"path": "['altname']"
													},
													"sink": {
														"path": "$['altname']"
													}
												},
												{
													"source": {
														"path": "['altphone']"
													},
													"sink": {
														"path": "$['altphone']"
													}
												},
												{
													"source": {
														"path": "['balancesearch']"
													},
													"sink": {
														"path": "$['balancesearch']"
													}
												},
												{
													"source": {
														"path": "['billingratecard']"
													},
													"sink": {
														"path": "$['billingratecard']"
													}
												},
												{
													"source": {
														"path": "['bulkmerge']"
													},
													"sink": {
														"path": "$['bulkmerge']"
													}
												},
												{
													"source": {
														"path": "['buyingreason']"
													},
													"sink": {
														"path": "$['buyingreason']"
													}
												},
												{
													"source": {
														"path": "['buyingtimeframe']"
													},
													"sink": {
														"path": "$['buyingtimeframe']"
													}
												},
												{
													"source": {
														"path": "['category']"
													},
													"sink": {
														"path": "$['category']"
													}
												},
												{
													"source": {
														"path": "['comments']"
													},
													"sink": {
														"path": "$['comments']"
													}
												},
												{
													"source": {
														"path": "['companyname']"
													},
													"sink": {
														"path": "$['companyname']"
													}
												},
												{
													"source": {
														"path": "['contact']"
													},
													"sink": {
														"path": "$['contact']"
													}
												},
												{
													"source": {
														"path": "['contactlist']"
													},
													"sink": {
														"path": "$['contactlist']"
													}
												},
												{
													"source": {
														"path": "['contactroles']"
													},
													"sink": {
														"path": "$['contactroles']"
													}
												},
												{
													"source": {
														"path": "['creditcards']"
													},
													"sink": {
														"path": "$['creditcards']"
													}
												},
												{
													"source": {
														"path": "['creditholdoverride']"
													},
													"sink": {
														"path": "$['creditholdoverride']"
													}
												},
												{
													"source": {
														"path": "['creditlimit']"
													},
													"sink": {
														"path": "$['creditlimit']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custentity1']"
													},
													"sink": {
														"path": "$['custentity1']"
													}
												},
												{
													"source": {
														"path": "['custentity2']"
													},
													"sink": {
														"path": "$['custentity2']"
													}
												},
												{
													"source": {
														"path": "['custentity_2663_customer_refund']"
													},
													"sink": {
														"path": "$['custentity_2663_customer_refund']"
													}
												},
												{
													"source": {
														"path": "['custentity_2663_direct_debit']"
													},
													"sink": {
														"path": "$['custentity_2663_direct_debit']"
													}
												},
												{
													"source": {
														"path": "['custentity_2663_email_address_notif']"
													},
													"sink": {
														"path": "$['custentity_2663_email_address_notif']"
													}
												},
												{
													"source": {
														"path": "['custentity_9572_custref_file_format']"
													},
													"sink": {
														"path": "$['custentity_9572_custref_file_format']"
													}
												},
												{
													"source": {
														"path": "['custentity_9572_dd_file_format']"
													},
													"sink": {
														"path": "$['custentity_9572_dd_file_format']"
													}
												},
												{
													"source": {
														"path": "['custentity_9572_ddcust_entitybank_sub']"
													},
													"sink": {
														"path": "$['custentity_9572_ddcust_entitybank_sub']"
													}
												},
												{
													"source": {
														"path": "['custentity_9572_ddcust_entitybnkformat']"
													},
													"sink": {
														"path": "$['custentity_9572_ddcust_entitybnkformat']"
													}
												},
												{
													"source": {
														"path": "['custentity_9572_refcust_entitybnkformat']"
													},
													"sink": {
														"path": "$['custentity_9572_refcust_entitybnkformat']"
													}
												},
												{
													"source": {
														"path": "['custentity_9572_refundcust_entitybnk_sub']"
													},
													"sink": {
														"path": "$['custentity_9572_refundcust_entitybnk_sub']"
													}
												},
												{
													"source": {
														"path": "['custentity_9997_dd_file_format']"
													},
													"sink": {
														"path": "$['custentity_9997_dd_file_format']"
													}
												},
												{
													"source": {
														"path": "['custentity_atlas_cpr_cuscomrate']"
													},
													"sink": {
														"path": "$['custentity_atlas_cpr_cuscomrate']"
													}
												},
												{
													"source": {
														"path": "['custentity_date_lsa']"
													},
													"sink": {
														"path": "$['custentity_date_lsa']"
													}
												},
												{
													"source": {
														"path": "['custentity_esc_annual_revenue']"
													},
													"sink": {
														"path": "$['custentity_esc_annual_revenue']"
													}
												},
												{
													"source": {
														"path": "['custentity_esc_industry']"
													},
													"sink": {
														"path": "$['custentity_esc_industry']"
													}
												},
												{
													"source": {
														"path": "['custentity_esc_no_of_employees']"
													},
													"sink": {
														"path": "$['custentity_esc_no_of_employees']"
													}
												},
												{
													"source": {
														"path": "['custentity_link_lsa']"
													},
													"sink": {
														"path": "$['custentity_link_lsa']"
													}
												},
												{
													"source": {
														"path": "['custentity_link_name_lsa']"
													},
													"sink": {
														"path": "$['custentity_link_name_lsa']"
													}
												},
												{
													"source": {
														"path": "['custentity_marcredithold']"
													},
													"sink": {
														"path": "$['custentity_marcredithold']"
													}
												},
												{
													"source": {
														"path": "['custentity_mod_corporatecust']"
													},
													"sink": {
														"path": "$['custentity_mod_corporatecust']"
													}
												},
												{
													"source": {
														"path": "['custentity_mod_customer_class']"
													},
													"sink": {
														"path": "$['custentity_mod_customer_class']"
													}
												},
												{
													"source": {
														"path": "['custentity_modcredithold']"
													},
													"sink": {
														"path": "$['custentity_modcredithold']"
													}
												},
												{
													"source": {
														"path": "['custentity_naw_trans_need_approval']"
													},
													"sink": {
														"path": "$['custentity_naw_trans_need_approval']"
													}
												},
												{
													"source": {
														"path": "['custentity_oldhtminternalid']"
													},
													"sink": {
														"path": "$['custentity_oldhtminternalid']"
													}
												},
												{
													"source": {
														"path": "['custentity_pri_bpa_cust_sync_override']"
													},
													"sink": {
														"path": "$['custentity_pri_bpa_cust_sync_override']"
													}
												},
												{
													"source": {
														"path": "['custentity_pri_bpa_late_inv_email_sent']"
													},
													"sink": {
														"path": "$['custentity_pri_bpa_late_inv_email_sent']"
													}
												},
												{
													"source": {
														"path": "['custentity_pri_bpa_pkg_shp_carrier']"
													},
													"sink": {
														"path": "$['custentity_pri_bpa_pkg_shp_carrier']"
													}
												},
												{
													"source": {
														"path": "['custentity_pri_bpa_pkg_shp_services']"
													},
													"sink": {
														"path": "$['custentity_pri_bpa_pkg_shp_services']"
													}
												},
												{
													"source": {
														"path": "['custentity_pri_bpa_send_statement']"
													},
													"sink": {
														"path": "$['custentity_pri_bpa_send_statement']"
													}
												},
												{
													"source": {
														"path": "['custentity_sales_tax_exmpt_exp_date']"
													},
													"sink": {
														"path": "$['custentity_sales_tax_exmpt_exp_date']"
													}
												},
												{
													"source": {
														"path": "['custentity_wmsse_asn_required']"
													},
													"sink": {
														"path": "$['custentity_wmsse_asn_required']"
													}
												},
												{
													"source": {
														"path": "['custentityht_3rdpartybillingaddress1']"
													},
													"sink": {
														"path": "$['custentityht_3rdpartybillingaddress1']"
													}
												},
												{
													"source": {
														"path": "['custentityht_3rdpartybillingaddress2']"
													},
													"sink": {
														"path": "$['custentityht_3rdpartybillingaddress2']"
													}
												},
												{
													"source": {
														"path": "['custentityht_3rdpartybillingcity']"
													},
													"sink": {
														"path": "$['custentityht_3rdpartybillingcity']"
													}
												},
												{
													"source": {
														"path": "['custentityht_3rdpartybillingcountry']"
													},
													"sink": {
														"path": "$['custentityht_3rdpartybillingcountry']"
													}
												},
												{
													"source": {
														"path": "['custentityht_3rdpartybillingstate']"
													},
													"sink": {
														"path": "$['custentityht_3rdpartybillingstate']"
													}
												},
												{
													"source": {
														"path": "['custentityht_3rdpartybillingzip']"
													},
													"sink": {
														"path": "$['custentityht_3rdpartybillingzip']"
													}
												},
												{
													"source": {
														"path": "['custentityht_additionalinvoiceemails']"
													},
													"sink": {
														"path": "$['custentityht_additionalinvoiceemails']"
													}
												},
												{
													"source": {
														"path": "['custentityht_alertforquality']"
													},
													"sink": {
														"path": "$['custentityht_alertforquality']"
													}
												},
												{
													"source": {
														"path": "['custentityht_alertmsgforquality']"
													},
													"sink": {
														"path": "$['custentityht_alertmsgforquality']"
													}
												},
												{
													"source": {
														"path": "['custentityht_automotivecustomer']"
													},
													"sink": {
														"path": "$['custentityht_automotivecustomer']"
													}
												},
												{
													"source": {
														"path": "['custentityht_barcode']"
													},
													"sink": {
														"path": "$['custentityht_barcode']"
													}
												},
												{
													"source": {
														"path": "['custentityht_callbeforeshipping_entfld']"
													},
													"sink": {
														"path": "$['custentityht_callbeforeshipping_entfld']"
													}
												},
												{
													"source": {
														"path": "['custentityht_certsrequired']"
													},
													"sink": {
														"path": "$['custentityht_certsrequired']"
													}
												},
												{
													"source": {
														"path": "['custentityht_checkbook']"
													},
													"sink": {
														"path": "$['custentityht_checkbook']"
													}
												},
												{
													"source": {
														"path": "['custentityht_creditemail']"
													},
													"sink": {
														"path": "$['custentityht_creditemail']"
													}
												},
												{
													"source": {
														"path": "['custentityht_lastdatecontact']"
													},
													"sink": {
														"path": "$['custentityht_lastdatecontact']"
													}
												},
												{
													"source": {
														"path": "['custentityht_leadnotes']"
													},
													"sink": {
														"path": "$['custentityht_leadnotes']"
													}
												},
												{
													"source": {
														"path": "['custentityht_rateclass']"
													},
													"sink": {
														"path": "$['custentityht_rateclass']"
													}
												},
												{
													"source": {
														"path": "['custentityht_requiresheattreatedskid']"
													},
													"sink": {
														"path": "$['custentityht_requiresheattreatedskid']"
													}
												},
												{
													"source": {
														"path": "['custentityht_shipcomplete']"
													},
													"sink": {
														"path": "$['custentityht_shipcomplete']"
													}
												},
												{
													"source": {
														"path": "['custentityht_shipper']"
													},
													"sink": {
														"path": "$['custentityht_shipper']"
													}
												},
												{
													"source": {
														"path": "['custentityht_shipperaddresslink']"
													},
													"sink": {
														"path": "$['custentityht_shipperaddresslink']"
													}
												},
												{
													"source": {
														"path": "['custentityht_shippercomments']"
													},
													"sink": {
														"path": "$['custentityht_shippercomments']"
													}
												},
												{
													"source": {
														"path": "['custentityht_skidquantitygroup']"
													},
													"sink": {
														"path": "$['custentityht_skidquantitygroup']"
													}
												},
												{
													"source": {
														"path": "['custentityhtcustomeracceptedpricing']"
													},
													"sink": {
														"path": "$['custentityhtcustomeracceptedpricing']"
													}
												},
												{
													"source": {
														"path": "['custentityhtcustomerprioritylevel']"
													},
													"sink": {
														"path": "$['custentityhtcustomerprioritylevel']"
													}
												},
												{
													"source": {
														"path": "['custentityhtfreightchargepreferences']"
													},
													"sink": {
														"path": "$['custentityhtfreightchargepreferences']"
													}
												},
												{
													"source": {
														"path": "['custentityhtshipperemail']"
													},
													"sink": {
														"path": "$['custentityhtshipperemail']"
													}
												},
												{
													"source": {
														"path": "['custentityhtshippername']"
													},
													"sink": {
														"path": "$['custentityhtshippername']"
													}
												},
												{
													"source": {
														"path": "['custentityhtshipperphone']"
													},
													"sink": {
														"path": "$['custentityhtshipperphone']"
													}
												},
												{
													"source": {
														"path": "['custentityhtshortcustomername']"
													},
													"sink": {
														"path": "$['custentityhtshortcustomername']"
													}
												},
												{
													"source": {
														"path": "['custentityhtspecialpackaging']"
													},
													"sink": {
														"path": "$['custentityhtspecialpackaging']"
													}
												},
												{
													"source": {
														"path": "['custentityhtupsnumber']"
													},
													"sink": {
														"path": "$['custentityhtupsnumber']"
													}
												},
												{
													"source": {
														"path": "['datecreated']"
													},
													"sink": {
														"path": "$['datecreated']"
													}
												},
												{
													"source": {
														"path": "['defaultallocationstrategy']"
													},
													"sink": {
														"path": "$['defaultallocationstrategy']"
													}
												},
												{
													"source": {
														"path": "['defaultbankaccount']"
													},
													"sink": {
														"path": "$['defaultbankaccount']"
													}
												},
												{
													"source": {
														"path": "['defaultbillingaddress']"
													},
													"sink": {
														"path": "$['defaultbillingaddress']"
													}
												},
												{
													"source": {
														"path": "['defaultorderpriority']"
													},
													"sink": {
														"path": "$['defaultorderpriority']"
													}
												},
												{
													"source": {
														"path": "['defaultshippingaddress']"
													},
													"sink": {
														"path": "$['defaultshippingaddress']"
													}
												},
												{
													"source": {
														"path": "['displaysymbol']"
													},
													"sink": {
														"path": "$['displaysymbol']"
													}
												},
												{
													"source": {
														"path": "['duplicate']"
													},
													"sink": {
														"path": "$['duplicate']"
													}
												},
												{
													"source": {
														"path": "['email']"
													},
													"sink": {
														"path": "$['email']"
													}
												},
												{
													"source": {
														"path": "['emailpreference']"
													},
													"sink": {
														"path": "$['emailpreference']"
													}
												},
												{
													"source": {
														"path": "['emailtransactions']"
													},
													"sink": {
														"path": "$['emailtransactions']"
													}
												},
												{
													"source": {
														"path": "['enddate']"
													},
													"sink": {
														"path": "$['enddate']"
													}
												},
												{
													"source": {
														"path": "['entityid']"
													},
													"sink": {
														"path": "$['entityid']"
													}
												},
												{
													"source": {
														"path": "['entitynumber']"
													},
													"sink": {
														"path": "$['entitynumber']"
													}
												},
												{
													"source": {
														"path": "['entitystatus']"
													},
													"sink": {
														"path": "$['entitystatus']"
													}
												},
												{
													"source": {
														"path": "['entitytitle']"
													},
													"sink": {
														"path": "$['entitytitle']"
													}
												},
												{
													"source": {
														"path": "['estimatedbudget']"
													},
													"sink": {
														"path": "$['estimatedbudget']"
													}
												},
												{
													"source": {
														"path": "['externalid']"
													},
													"sink": {
														"path": "$['externalid']"
													}
												},
												{
													"source": {
														"path": "['fax']"
													},
													"sink": {
														"path": "$['fax']"
													}
												},
												{
													"source": {
														"path": "['faxtransactions']"
													},
													"sink": {
														"path": "$['faxtransactions']"
													}
												},
												{
													"source": {
														"path": "['firstname']"
													},
													"sink": {
														"path": "$['firstname']"
													}
												},
												{
													"source": {
														"path": "['firstorderdate']"
													},
													"sink": {
														"path": "$['firstorderdate']"
													}
												},
												{
													"source": {
														"path": "['firstsaledate']"
													},
													"sink": {
														"path": "$['firstsaledate']"
													}
												},
												{
													"source": {
														"path": "['giveaccess']"
													},
													"sink": {
														"path": "$['giveaccess']"
													}
												},
												{
													"source": {
														"path": "['grouppricing']"
													},
													"sink": {
														"path": "$['grouppricing']"
													}
												},
												{
													"source": {
														"path": "['homephone']"
													},
													"sink": {
														"path": "$['homephone']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['isbudgetapproved']"
													},
													"sink": {
														"path": "$['isbudgetapproved']"
													}
												},
												{
													"source": {
														"path": "['isinactive']"
													},
													"sink": {
														"path": "$['isinactive']"
													}
												},
												{
													"source": {
														"path": "['isperson']"
													},
													"sink": {
														"path": "$['isperson']"
													}
												},
												{
													"source": {
														"path": "['itempricing']"
													},
													"sink": {
														"path": "$['itempricing']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['lastname']"
													},
													"sink": {
														"path": "$['lastname']"
													}
												},
												{
													"source": {
														"path": "['lastorderdate']"
													},
													"sink": {
														"path": "$['lastorderdate']"
													}
												},
												{
													"source": {
														"path": "['lastsaledate']"
													},
													"sink": {
														"path": "$['lastsaledate']"
													}
												},
												{
													"source": {
														"path": "['leadsource']"
													},
													"sink": {
														"path": "$['leadsource']"
													}
												},
												{
													"source": {
														"path": "['middlename']"
													},
													"sink": {
														"path": "$['middlename']"
													}
												},
												{
													"source": {
														"path": "['mobilephone']"
													},
													"sink": {
														"path": "$['mobilephone']"
													}
												},
												{
													"source": {
														"path": "['negativenumberformat']"
													},
													"sink": {
														"path": "$['negativenumberformat']"
													}
												},
												{
													"source": {
														"path": "['numberformat']"
													},
													"sink": {
														"path": "$['numberformat']"
													}
												},
												{
													"source": {
														"path": "['oncredithold']"
													},
													"sink": {
														"path": "$['oncredithold']"
													}
												},
												{
													"source": {
														"path": "['overduebalancesearch']"
													},
													"sink": {
														"path": "$['overduebalancesearch']"
													}
												},
												{
													"source": {
														"path": "['overridecurrencyformat']"
													},
													"sink": {
														"path": "$['overridecurrencyformat']"
													}
												},
												{
													"source": {
														"path": "['parent']"
													},
													"sink": {
														"path": "$['parent']"
													}
												},
												{
													"source": {
														"path": "['partner']"
													},
													"sink": {
														"path": "$['partner']"
													}
												},
												{
													"source": {
														"path": "['paymentinstruments']"
													},
													"sink": {
														"path": "$['paymentinstruments']"
													}
												},
												{
													"source": {
														"path": "['phone']"
													},
													"sink": {
														"path": "$['phone']"
													}
												},
												{
													"source": {
														"path": "['pricelevel']"
													},
													"sink": {
														"path": "$['pricelevel']"
													}
												},
												{
													"source": {
														"path": "['printoncheckas']"
													},
													"sink": {
														"path": "$['printoncheckas']"
													}
												},
												{
													"source": {
														"path": "['printtransactions']"
													},
													"sink": {
														"path": "$['printtransactions']"
													}
												},
												{
													"source": {
														"path": "['probability']"
													},
													"sink": {
														"path": "$['probability']"
													}
												},
												{
													"source": {
														"path": "['receivablesaccount']"
													},
													"sink": {
														"path": "$['receivablesaccount']"
													}
												},
												{
													"source": {
														"path": "['reminderdays']"
													},
													"sink": {
														"path": "$['reminderdays']"
													}
												},
												{
													"source": {
														"path": "['resalenumber']"
													},
													"sink": {
														"path": "$['resalenumber']"
													}
												},
												{
													"source": {
														"path": "['salesreadiness']"
													},
													"sink": {
														"path": "$['salesreadiness']"
													}
												},
												{
													"source": {
														"path": "['salesrep']"
													},
													"sink": {
														"path": "$['salesrep']"
													}
												},
												{
													"source": {
														"path": "['salesteam']"
													},
													"sink": {
														"path": "$['salesteam']"
													}
												},
												{
													"source": {
														"path": "['salutation']"
													},
													"sink": {
														"path": "$['salutation']"
													}
												},
												{
													"source": {
														"path": "['searchstage']"
													},
													"sink": {
														"path": "$['searchstage']"
													}
												},
												{
													"source": {
														"path": "['shipcomplete']"
													},
													"sink": {
														"path": "$['shipcomplete']"
													}
												},
												{
													"source": {
														"path": "['shippingcarrier']"
													},
													"sink": {
														"path": "$['shippingcarrier']"
													}
												},
												{
													"source": {
														"path": "['shippingitem']"
													},
													"sink": {
														"path": "$['shippingitem']"
													}
												},
												{
													"source": {
														"path": "['startdate']"
													},
													"sink": {
														"path": "$['startdate']"
													}
												},
												{
													"source": {
														"path": "['symbolplacement']"
													},
													"sink": {
														"path": "$['symbolplacement']"
													}
												},
												{
													"source": {
														"path": "['terms']"
													},
													"sink": {
														"path": "$['terms']"
													}
												},
												{
													"source": {
														"path": "['territory']"
													},
													"sink": {
														"path": "$['territory']"
													}
												},
												{
													"source": {
														"path": "['thirdpartyacct']"
													},
													"sink": {
														"path": "$['thirdpartyacct']"
													}
												},
												{
													"source": {
														"path": "['thirdpartycarrier']"
													},
													"sink": {
														"path": "$['thirdpartycarrier']"
													}
												},
												{
													"source": {
														"path": "['thirdpartycountry']"
													},
													"sink": {
														"path": "$['thirdpartycountry']"
													}
												},
												{
													"source": {
														"path": "['thirdpartyzipcode']"
													},
													"sink": {
														"path": "$['thirdpartyzipcode']"
													}
												},
												{
													"source": {
														"path": "['title']"
													},
													"sink": {
														"path": "$['title']"
													}
												},
												{
													"source": {
														"path": "['unbilledorderssearch']"
													},
													"sink": {
														"path": "$['unbilledorderssearch']"
													}
												},
												{
													"source": {
														"path": "['url']"
													},
													"sink": {
														"path": "$['url']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(item(),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "HTMSalesOrderJsonADLS2",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Pages",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Access Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat('Bearer ',variables('access_token'))",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'salesorder'"
							}
						}
					},
					{
						"name": "Set Page Array",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pages",
							"value": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages').output.totalResults),mod(int(activity('Get Pages').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"access_token": {
						"type": "String"
					},
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"token_type": {
						"type": "String"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:17:06Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/HTMSalesOrderJsonADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Terms to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT id FROM term"
							}
						}
					},
					{
						"name": "ForEach Customer",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 contacts. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages').output.totalResults),mod(int(activity('Get Pages').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\": \"SELECT * FROM term\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "setOfObjects"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['discountpercent']"
													},
													"sink": {
														"path": "$['discountpercent']"
													}
												},
												{
													"source": {
														"path": "['discountpercentdatedriven']"
													},
													"sink": {
														"path": "$['discountpercentdatedriven']"
													}
												},
												{
													"source": {
														"path": "['daydiscountexpires']"
													},
													"sink": {
														"path": "$['daydiscountexpires']"
													}
												},
												{
													"source": {
														"path": "['dayofmonthnetdue']"
													},
													"sink": {
														"path": "$['dayofmonthnetdue']"
													}
												},
												{
													"source": {
														"path": "['daysuntilexpiry']"
													},
													"sink": {
														"path": "$['daysuntilexpiry']"
													}
												},
												{
													"source": {
														"path": "['daysuntilnetdue']"
													},
													"sink": {
														"path": "$['daysuntilnetdue']"
													}
												},
												{
													"source": {
														"path": "['duenextmonthifwithindays']"
													},
													"sink": {
														"path": "$['duenextmonthifwithindays']"
													}
												},
												{
													"source": {
														"path": "['externalid']"
													},
													"sink": {
														"path": "$['externalid']"
													}
												},
												{
													"source": {
														"path": "['isinactive']"
													},
													"sink": {
														"path": "$['isinactive']"
													}
												},
												{
													"source": {
														"path": "['installment']"
													},
													"sink": {
														"path": "$['installment']"
													}
												},
												{
													"source": {
														"path": "['percentages']"
													},
													"sink": {
														"path": "$['percentages']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['paytaxupfront']"
													},
													"sink": {
														"path": "$['paytaxupfront']"
													}
												},
												{
													"source": {
														"path": "['preferred']"
													},
													"sink": {
														"path": "$['preferred']"
													}
												},
												{
													"source": {
														"path": "['recurrencecount']"
													},
													"sink": {
														"path": "$['recurrencecount']"
													}
												},
												{
													"source": {
														"path": "['recurrencefrequency']"
													},
													"sink": {
														"path": "$['recurrencefrequency']"
													}
												},
												{
													"source": {
														"path": "['repeatevery']"
													},
													"sink": {
														"path": "$['repeatevery']"
													}
												},
												{
													"source": {
														"path": "['splitevenly']"
													},
													"sink": {
														"path": "$['splitevenly']"
													}
												},
												{
													"source": {
														"path": "['name']"
													},
													"sink": {
														"path": "$['name']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_Terms",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T16:17:15Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_Terms')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Transaction Lines to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Total Rows",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set Transaction Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COUNT(internalId) AS totalRows\nFROM dbo.',variables('transaction_type'))",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "NetsuiteData",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"TableName": {
										"value": "@variables('transaction_type')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "For Each Page of 5000",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Total Rows",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Total Rows').output.firstRow.totalRows),mod(int(activity('Get Total Rows').output.firstRow.totalRows),5000)),5000),1))",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 1,
							"activities": [
								{
									"name": "Get Sets of 5000 IDs",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT TOP 5000 internalId\nFROM (SELECT ROW_NUMBER() OVER(ORDER BY dateCreated DESC) AS RowNum, *\nFROM dbo.',variables('transaction_type'),' AS wo) AS data\nWHERE ',string(mul(item(),5000)),' < RowNum\nORDER BY data.dateCreated DESC')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "NetsuiteData",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "dbo",
												"TableName": {
													"value": "@variables('transaction_type')",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Process Items",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Get Sets of 5000 IDs",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Process Transaction Lines",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"item_array": {
												"value": "@activity('Get Sets of 5000 IDs').output.value",
												"type": "Expression"
											},
											"account_id": {
												"value": "@pipeline().parameters.account_id",
												"type": "Expression"
											},
											"transaction_type": {
												"value": "@variables('transaction_type')",
												"type": "Expression"
											},
											"auth": {
												"value": "@pipeline().parameters.auth",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Transaction Type",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "transaction_type",
							"value": "PurchaseOrder"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "string",
						"defaultValue": "3675944"
					},
					"auth": {
						"type": "string",
						"defaultValue": "YmE0YzUwZWRlMDk3NWI3MzA4NjMyNDA4NGRmYjA5N2ZlNjJjODg5YTAxMWNkNDAzYWEyOTM0MjQ2NmQ5NGM0MDoyNTk1NDQxODE2MjNjMmIzYzAxZDliNjMzOGE4NjI0ZGZjZjg0OTYwYTcwYzU5NTQ3ODZmZWEyNWM4MzhmMjY3"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiNzIyQzhBMjYtM0VCQi00N0FGLTlFQTUtOTBBMTcyNTU2OEU2OzM2NzU5NDQiLCJiYTRjNTBlZGUwOTc1YjczMDg2MzI0MDg0ZGZiMDk3ZmU2MmM4ODlhMDExY2Q0MDNhYTI5MzQyNDY2ZDk0YzQwIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzNTQyMzYyNiwiZXhwIjoxNjM2MDI4NDI2LCJpYXQiOjE2MzU0MjM2MjYsImp0aSI6IjM2NzU5NDQuci1hLjFmNDk3MGY4LTM5MTUtNDVlMS1hNDY3LTA5ZWQzYTk3MjFhYl8xNjM1NDIzNjI2OTkxLjAifQ.gUydUvqDglVjO-FGb21u9YqAlDoF7gIvLp2cta0wvUYT4Z3PTvBV_4xQoChNDG8o5Ha0Ht7y8_iqvBLWVhs74FdOSX1qQaf-P7OSPGOYELFobZpncNBe4fmMQQEonu8w2iDmp1_GriRkqkTxT3ASnWQDo3xM-zF15HDKfkn4XDQxj1d6kdVaiVAKdoC72rEXmiKAjs9MF6KmfoC06KlaL1xMXnrzKppju5BjQbdJYEOYdTv9MMIISUCEnMPewaruLa09pfoimb28LHkYVg4Pd6IL3UFV34zAAEf7ekcsGsESb80H37H8AVAxK2dgZ_pSJW0lhWQhB7xd5H9RYiHZxKvbJ3bl1nhpMqN6_UJi6sdEF4_zHPq8Y_DIWN6wTE_mFc7hgFH1CF6hYzzyORU3t3eNVPZ0tBQq7789qmgpVI5eI78oMtCUlqHqJt2tJRaeYcpGGHqN18Q3Bo0yCYYMri2bMpKZnuo66JrJ7Qfu7csuAAYhNUnYtaiZa25areK3WyhBnlZxfijmZvMtFqWRGhaTILiw41hWVSmLByZV75yhYu9wZxycI-V3Kwv9OvraCeOtnj8SZVA7LyyQejUVj7kwKmknkQfUxKgYSboxmuwcp38X2yhIFOpaDB8WTff53ub4f2ymf7B_5ux4dkytdBPHX9_R0C1k5KAcCYWm6fU"
					}
				},
				"variables": {
					"transaction_type": {
						"type": "String"
					}
				},
				"folder": {
					"name": "HTM/Transaction Lines"
				},
				"annotations": [],
				"lastPublishTime": "2021-11-12T20:33:19Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/NetsuiteData')]",
				"[concat(variables('workspaceId'), '/pipelines/Process Transaction Lines')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Transaction Lines to ADLS2_copy1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Total Rows",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set Transaction Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COUNT(internalId) AS totalRows\nFROM dbo.',variables('transaction_type'))",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "NetsuiteData",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"TableName": {
										"value": "@variables('transaction_type')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "For Each Page of 5000",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Total Rows",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Total Rows').output.firstRow.totalRows),mod(int(activity('Get Total Rows').output.firstRow.totalRows),5000)),5000),1))",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 2,
							"activities": [
								{
									"name": "Get Sets of 5000 IDs",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT TOP 5000 internalId\nFROM (SELECT ROW_NUMBER() OVER(ORDER BY dateCreated DESC) AS RowNum, *\nFROM dbo.',variables('transaction_type'),' AS wo) AS data\nWHERE ',string(mul(item(),5000)),' < RowNum\nORDER BY data.dateCreated DESC')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "NetsuiteData",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "dbo",
												"TableName": {
													"value": "@variables('transaction_type')",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Process Items",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Get Sets of 5000 IDs",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Process Transaction Lines",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"item_array": {
												"value": "@activity('Get Sets of 5000 IDs').output.value",
												"type": "Expression"
											},
											"account_id": {
												"value": "@pipeline().parameters.account_id",
												"type": "Expression"
											},
											"transaction_type": {
												"value": "@variables('transaction_type')",
												"type": "Expression"
											},
											"auth": {
												"value": "@pipeline().parameters.auth",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Transaction Type",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "transaction_type",
							"value": "Invoice"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "string",
						"defaultValue": "3675944"
					},
					"auth": {
						"type": "string",
						"defaultValue": "YmE0YzUwZWRlMDk3NWI3MzA4NjMyNDA4NGRmYjA5N2ZlNjJjODg5YTAxMWNkNDAzYWEyOTM0MjQ2NmQ5NGM0MDoyNTk1NDQxODE2MjNjMmIzYzAxZDliNjMzOGE4NjI0ZGZjZjg0OTYwYTcwYzU5NTQ3ODZmZWEyNWM4MzhmMjY3"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiNzIyQzhBMjYtM0VCQi00N0FGLTlFQTUtOTBBMTcyNTU2OEU2OzM2NzU5NDQiLCJiYTRjNTBlZGUwOTc1YjczMDg2MzI0MDg0ZGZiMDk3ZmU2MmM4ODlhMDExY2Q0MDNhYTI5MzQyNDY2ZDk0YzQwIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzNTQyMzYyNiwiZXhwIjoxNjM2MDI4NDI2LCJpYXQiOjE2MzU0MjM2MjYsImp0aSI6IjM2NzU5NDQuci1hLjFmNDk3MGY4LTM5MTUtNDVlMS1hNDY3LTA5ZWQzYTk3MjFhYl8xNjM1NDIzNjI2OTkxLjAifQ.gUydUvqDglVjO-FGb21u9YqAlDoF7gIvLp2cta0wvUYT4Z3PTvBV_4xQoChNDG8o5Ha0Ht7y8_iqvBLWVhs74FdOSX1qQaf-P7OSPGOYELFobZpncNBe4fmMQQEonu8w2iDmp1_GriRkqkTxT3ASnWQDo3xM-zF15HDKfkn4XDQxj1d6kdVaiVAKdoC72rEXmiKAjs9MF6KmfoC06KlaL1xMXnrzKppju5BjQbdJYEOYdTv9MMIISUCEnMPewaruLa09pfoimb28LHkYVg4Pd6IL3UFV34zAAEf7ekcsGsESb80H37H8AVAxK2dgZ_pSJW0lhWQhB7xd5H9RYiHZxKvbJ3bl1nhpMqN6_UJi6sdEF4_zHPq8Y_DIWN6wTE_mFc7hgFH1CF6hYzzyORU3t3eNVPZ0tBQq7789qmgpVI5eI78oMtCUlqHqJt2tJRaeYcpGGHqN18Q3Bo0yCYYMri2bMpKZnuo66JrJ7Qfu7csuAAYhNUnYtaiZa25areK3WyhBnlZxfijmZvMtFqWRGhaTILiw41hWVSmLByZV75yhYu9wZxycI-V3Kwv9OvraCeOtnj8SZVA7LyyQejUVj7kwKmknkQfUxKgYSboxmuwcp38X2yhIFOpaDB8WTff53ub4f2ymf7B_5ux4dkytdBPHX9_R0C1k5KAcCYWm6fU"
					}
				},
				"variables": {
					"transaction_type": {
						"type": "String"
					}
				},
				"folder": {
					"name": "HTM/Transaction Lines"
				},
				"annotations": [],
				"lastPublishTime": "2021-11-12T20:33:25Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/NetsuiteData')]",
				"[concat(variables('workspaceId'), '/pipelines/Process Transaction Lines')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM Legacy Work Order Headers to ADLS2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Post Refresh Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Basic ', variables('auth'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=refresh_token&refresh_token=',variables('refresh_token'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Pages Customers",
						"description": "Makes a dummy REST call to get the total number of pages.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Post Refresh Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
									"type": "Expression"
								},
								"Prefer": "transient",
								"Content-Type": "application/json"
							},
							"body": {
								"q": "SELECT  id FROM transaction WHERE recordtype LIKE 'workorder'"
							}
						}
					},
					{
						"name": "ForEach Work Order",
						"description": "For each loop to recursively copy data to the data lake for each page of 1000 work orders. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pages Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,add(div(sub(int(activity('Get Pages Customers').output.totalResults),mod(int(activity('Get Pages Customers').output.totalResults),1000)),1000),1))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "JSON To Data Lake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(mul(item(),1000)))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/sales-order-headers/@{concat('sales-order-hed-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\"q\":\"SELECT * FROM transaction WHERE recordtype LIKE 'workorder'\"}",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
													"type": "Expression"
												},
												"Content-Type": "application/json",
												"Prefer": "transient"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['abbrevtype']"
													},
													"sink": {
														"path": "$['abbrevtype']"
													}
												},
												{
													"source": {
														"path": "['balsegstatus']"
													},
													"sink": {
														"path": "$['balsegstatus']"
													}
												},
												{
													"source": {
														"path": "['billingstatus']"
													},
													"sink": {
														"path": "$['billingstatus']"
													}
												},
												{
													"source": {
														"path": "['closedate']"
													},
													"sink": {
														"path": "$['closedate']"
													}
												},
												{
													"source": {
														"path": "['committed']"
													},
													"sink": {
														"path": "$['committed']"
													}
												},
												{
													"source": {
														"path": "['createdby']"
													},
													"sink": {
														"path": "$['createdby']"
													}
												},
												{
													"source": {
														"path": "['createddate']"
													},
													"sink": {
														"path": "$['createddate']"
													}
												},
												{
													"source": {
														"path": "['currency']"
													},
													"sink": {
														"path": "$['currency']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtallowworkorderclose']"
													},
													"sink": {
														"path": "$['custbodyhtallowworkorderclose']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtisclosedworkorderbuildunbld']"
													},
													"sink": {
														"path": "$['custbodyhtisclosedworkorderbuildunbld']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtproducionschedulewoline']"
													},
													"sink": {
														"path": "$['custbodyhtproducionschedulewoline']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtproductionschedule']"
													},
													"sink": {
														"path": "$['custbodyhtproductionschedule']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtsalesorder']"
													},
													"sink": {
														"path": "$['custbodyhtsalesorder']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtsalesorderquantity']"
													},
													"sink": {
														"path": "$['custbodyhtsalesorderquantity']"
													}
												},
												{
													"source": {
														"path": "['custbodyhtworkorderttype']"
													},
													"sink": {
														"path": "$['custbodyhtworkorderttype']"
													}
												},
												{
													"source": {
														"path": "['daysopen']"
													},
													"sink": {
														"path": "$['daysopen']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['exchangerate']"
													},
													"sink": {
														"path": "$['exchangerate']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['includeinforecast']"
													},
													"sink": {
														"path": "$['includeinforecast']"
													}
												},
												{
													"source": {
														"path": "['isfinchrg']"
													},
													"sink": {
														"path": "$['isfinchrg']"
													}
												},
												{
													"source": {
														"path": "['isreversal']"
													},
													"sink": {
														"path": "$['isreversal']"
													}
												},
												{
													"source": {
														"path": "['lastmodifiedby']"
													},
													"sink": {
														"path": "$['lastmodifiedby']"
													}
												},
												{
													"source": {
														"path": "['lastmodifieddate']"
													},
													"sink": {
														"path": "$['lastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['nexus']"
													},
													"sink": {
														"path": "$['nexus']"
													}
												},
												{
													"source": {
														"path": "['number']"
													},
													"sink": {
														"path": "$['number']"
													}
												},
												{
													"source": {
														"path": "['ordpicked']"
													},
													"sink": {
														"path": "$['ordpicked']"
													}
												},
												{
													"source": {
														"path": "['paymenthold']"
													},
													"sink": {
														"path": "$['paymenthold']"
													}
												},
												{
													"source": {
														"path": "['posting']"
													},
													"sink": {
														"path": "$['posting']"
													}
												},
												{
													"source": {
														"path": "['postingperiod']"
													},
													"sink": {
														"path": "$['postingperiod']"
													}
												},
												{
													"source": {
														"path": "['printedpickingticket']"
													},
													"sink": {
														"path": "$['printedpickingticket']"
													}
												},
												{
													"source": {
														"path": "['recordtype']"
													},
													"sink": {
														"path": "$['recordtype']"
													}
												},
												{
													"source": {
														"path": "['shipcomplete']"
													},
													"sink": {
														"path": "$['shipcomplete']"
													}
												},
												{
													"source": {
														"path": "['status']"
													},
													"sink": {
														"path": "$['status']"
													}
												},
												{
													"source": {
														"path": "['trandate']"
													},
													"sink": {
														"path": "$['trandate']"
													}
												},
												{
													"source": {
														"path": "['trandisplayname']"
													},
													"sink": {
														"path": "$['trandisplayname']"
													}
												},
												{
													"source": {
														"path": "['tranid']"
													},
													"sink": {
														"path": "$['tranid']"
													}
												},
												{
													"source": {
														"path": "['transactionnumber']"
													},
													"sink": {
														"path": "$['transactionnumber']"
													}
												},
												{
													"source": {
														"path": "['type']"
													},
													"sink": {
														"path": "$['type']"
													}
												},
												{
													"source": {
														"path": "['typebaseddocumentnumber']"
													},
													"sink": {
														"path": "$['typebaseddocumentnumber']"
													}
												},
												{
													"source": {
														"path": "['userevenuearrangement']"
													},
													"sink": {
														"path": "$['userevenuearrangement']"
													}
												},
												{
													"source": {
														"path": "['visibletocustomer']"
													},
													"sink": {
														"path": "$['visibletocustomer']"
													}
												},
												{
													"source": {
														"path": "['void']"
													},
													"sink": {
														"path": "$['void']"
													}
												},
												{
													"source": {
														"path": "['voided']"
													},
													"sink": {
														"path": "$['voided']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": {
													"value": "@mul(int(item()),1000)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_WorkOrderHead",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					},
					"code": {
						"type": "String",
						"defaultValue": "9c40e8439004c9b291e11da13263dcc29f839a2c4684bb6820ad4443c610cb57"
					}
				},
				"variables": {
					"refresh_token": {
						"type": "String",
						"defaultValue": "eyJraWQiOiJjLjM2NzU5NDQuMjAyMS0xMC0wNF8wMC0wOC0xMiIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzU3MzAiLCJhdWQiOlsiRjE2QTczNUUtNUQ1Mi00RDFCLTk1QzUtMUU5MTdENUQwQzAzOzM2NzU5NDQiLCJkMGQxOTJlMmVhNmNkNjMyZjViNTc3NWE3N2RmODM1MWUxZjlhZjQ2M2Y5YmUyYmI1YzQzMTBhOTRiNmNhNmQyIl0sInNjb3BlIjpbInJlc3RsZXRzIiwicmVzdF93ZWJzZXJ2aWNlcyJdLCJpc3MiOiJodHRwczpcL1wvc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTYzMzYzNzE0MSwiZXhwIjoxNjM0MjQxOTQxLCJpYXQiOjE2MzM2MzcxNDEsImp0aSI6IjM2NzU5NDQuci1hLjc2ZjExODEyLTFkOWMtNDkzZS1hNmJkLTE1NGJmOWI0YjFmMl8xNjMzNjM3MTQxMzgwLjAifQ.ZK2_AXfNEsu0pYusg0jJAR1DYukWomqf5BmrjzcDt76-tmFKlilDTBzhpp3Lzu3zC_YODv2i_ZsCJc-SqtjAJCuMEqk4ld3UlG1j_uXqteSdYukMQMfPdTAmF3XbQoSqMq0lwfDAMOGm-9uekN1SUgVbcF0jqhsN_pS-It1fJKHFW43LeeedqgVShkqBAcnOF86d2dS2L3tB-98lFuNx_FrMDDJ3gmM34OXKS604wvmffNivX7F1eZnoARbi9vLV0cZUjiL5mLi6riXfzW09JyrwihX9obfcv8vAVsOX7oViucjzP6TPIr02u95N43iUv5T3eV6tEmtm0o9iuSoV0e5iknlKEbk5__WnE0xIaBX2Gwgljhd2a3dly_L3EGfeU0Gra67LHJnDOvpEMqHNZvGr1NUhI_Z6oq05oSbbiP8in7oF2j1iSOkbFY-qoAW9u0pZ-VWSGVM6Ffa9S-5wjQQ0jFOZrMQkXcS0LOI1WQJBQbxNlbDotyRTrONrh8tP55KjZ2LkmsaY634F_l4gTg-HQF7VBaSoFynw6WdsflzhUD8yKGkx5byzCH3KPxKYw0ULMjz6jgKwClZ_Qh_6cNzDC-QnRlQr4XE6aydn8CUpMC9xE1POVjkLIq_ELA5yO3NqWwR1HgLWTrWI0fpt4IuyQ89Hthf9EWsmzOOl-BI"
					},
					"query_string": {
						"type": "String"
					},
					"line_query_string": {
						"type": "String"
					},
					"client_id_base64": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "d0d192e2ea6cd632f5b5775a77df8351e1f9af463f9be2bb5c4310a94b6ca6d2"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "162bc9c04815b4b778d048810eef8b776df43b04ceb0f75c17717dbe68be69c2"
					},
					"auth": {
						"type": "String",
						"defaultValue": "ZDBkMTkyZTJlYTZjZDYzMmY1YjU3NzVhNzdkZjgzNTFlMWY5YWY0NjNmOWJlMmJiNWM0MzEwYTk0YjZjYTZkMjoxNjJiYzljMDQ4MTViNGI3NzhkMDQ4ODEwZWVmOGI3NzZkZjQzYjA0Y2ViMGY3NWMxNzcxN2RiZTY4YmU2OWMy"
					},
					"pages": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HTM"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-21T15:46:14Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_WorkOrderHead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Netsuite Data Refresh')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data Import Type",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.item.ConnectionType",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "ODBC",
									"activities": [
										{
											"name": "Modineer Netsuite ODBC Copy",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "OdbcSource",
													"query": {
														"value": "@pipeline().parameters.item.DataQuery",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00"
												},
												"sink": {
													"type": "SqlDWSink",
													"preCopyScript": {
														"value": "@{concat('TRUNCATE TABLE ',pipeline().parameters.item.SchemaName,'.',pipeline().parameters.item.TableName)}",
														"type": "Expression"
													},
													"disableMetricsCollection": false
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "NetsuiteODBCSource",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "AzureSynapseDatabase",
													"type": "DatasetReference",
													"parameters": {
														"TableName": {
															"value": "@pipeline().parameters.item.TableName",
															"type": "Expression"
														},
														"DbName": {
															"value": "@pipeline().parameters.item.DbName",
															"type": "Expression"
														},
														"SchemaName": {
															"value": "@pipeline().parameters.item.SchemaName",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Wait1",
									"description": "This is a placeholder",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"item": {
						"type": "object"
					}
				},
				"folder": {
					"name": "Master Data/Slave Pipeline"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/NetsuiteODBCSource')]",
				"[concat(variables('workspaceId'), '/datasets/AzureSynapseDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Process Transaction Lines')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach Transaction Get Lines",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.item_array",
								"type": "Expression"
							},
							"batchCount": 2,
							"activities": [
								{
									"name": "Transaction Lines",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(0))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/transaction-lines/work-order/@{concat('workorderlines-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:05:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@concat('{\"q\": \"SELECT * FROM TransactionLine WHERE transaction LIKE ',item().internalId,'\"}')",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Prefer": "transient",
												"Authorization": {
													"value": "@variables('bearer_authentication')",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 2
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['amountlinked']"
													},
													"sink": {
														"path": "$['amountlinked']"
													}
												},
												{
													"source": {
														"path": "['assemblycomponent']"
													},
													"sink": {
														"path": "$['assemblycomponent']"
													}
												},
												{
													"source": {
														"path": "['cleared']"
													},
													"sink": {
														"path": "$['cleared']"
													}
												},
												{
													"source": {
														"path": "['commitmentfirm']"
													},
													"sink": {
														"path": "$['commitmentfirm']"
													}
												},
												{
													"source": {
														"path": "['debitforeignamount']"
													},
													"sink": {
														"path": "$['debitforeignamount']"
													}
												},
												{
													"source": {
														"path": "['donotdisplayline']"
													},
													"sink": {
														"path": "$['donotdisplayline']"
													}
												},
												{
													"source": {
														"path": "['dropship']"
													},
													"sink": {
														"path": "$['dropship']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['expenseaccount']"
													},
													"sink": {
														"path": "$['expenseaccount']"
													}
												},
												{
													"source": {
														"path": "['foreignamount']"
													},
													"sink": {
														"path": "$['foreignamount']"
													}
												},
												{
													"source": {
														"path": "['hasfulfillableitems']"
													},
													"sink": {
														"path": "$['hasfulfillableitems']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['isbillable']"
													},
													"sink": {
														"path": "$['isbillable']"
													}
												},
												{
													"source": {
														"path": "['isclosed']"
													},
													"sink": {
														"path": "$['isclosed']"
													}
												},
												{
													"source": {
														"path": "['iscogs']"
													},
													"sink": {
														"path": "$['iscogs']"
													}
												},
												{
													"source": {
														"path": "['iscustomglline']"
													},
													"sink": {
														"path": "$['iscustomglline']"
													}
												},
												{
													"source": {
														"path": "['isfullyshipped']"
													},
													"sink": {
														"path": "$['isfullyshipped']"
													}
												},
												{
													"source": {
														"path": "['isfxvariance']"
													},
													"sink": {
														"path": "$['isfxvariance']"
													}
												},
												{
													"source": {
														"path": "['isinventoryaffecting']"
													},
													"sink": {
														"path": "$['isinventoryaffecting']"
													}
												},
												{
													"source": {
														"path": "['kitcomponent']"
													},
													"sink": {
														"path": "$['kitcomponent']"
													}
												},
												{
													"source": {
														"path": "['linelastmodifieddate']"
													},
													"sink": {
														"path": "$['linelastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['linesequencenumber']"
													},
													"sink": {
														"path": "$['linesequencenumber']"
													}
												},
												{
													"source": {
														"path": "['location']"
													},
													"sink": {
														"path": "$['location']"
													}
												},
												{
													"source": {
														"path": "['mainline']"
													},
													"sink": {
														"path": "$['mainline']"
													}
												},
												{
													"source": {
														"path": "['matchbilltoreceipt']"
													},
													"sink": {
														"path": "$['matchbilltoreceipt']"
													}
												},
												{
													"source": {
														"path": "['netamount']"
													},
													"sink": {
														"path": "$['netamount']"
													}
												},
												{
													"source": {
														"path": "['oldcommitmentfirm']"
													},
													"sink": {
														"path": "$['oldcommitmentfirm']"
													}
												},
												{
													"source": {
														"path": "['processedbyrevcommit']"
													},
													"sink": {
														"path": "$['processedbyrevcommit']"
													}
												},
												{
													"source": {
														"path": "['quantitybilled']"
													},
													"sink": {
														"path": "$['quantitybilled']"
													}
												},
												{
													"source": {
														"path": "['quantityrejected']"
													},
													"sink": {
														"path": "$['quantityrejected']"
													}
												},
												{
													"source": {
														"path": "['quantityshiprecv']"
													},
													"sink": {
														"path": "$['quantityshiprecv']"
													}
												},
												{
													"source": {
														"path": "['specialorder']"
													},
													"sink": {
														"path": "$['specialorder']"
													}
												},
												{
													"source": {
														"path": "['subsidiary']"
													},
													"sink": {
														"path": "$['subsidiary']"
													}
												},
												{
													"source": {
														"path": "['taxline']"
													},
													"sink": {
														"path": "$['taxline']"
													}
												},
												{
													"source": {
														"path": "['transaction']"
													},
													"sink": {
														"path": "$['transaction']"
													}
												},
												{
													"source": {
														"path": "['transactiondiscount']"
													},
													"sink": {
														"path": "$['transactiondiscount']"
													}
												},
												{
													"source": {
														"path": "['uniquekey']"
													},
													"sink": {
														"path": "$['uniquekey']"
													}
												},
												{
													"source": {
														"path": "['units']"
													},
													"sink": {
														"path": "$['units']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": 0
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_TransactionLinesPurchaseOrder",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ',pipeline().parameters.auth)",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',pipeline().parameters.refresh_token)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Post Refresh Token",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "bearer_authentication",
										"value": {
											"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"item_array": {
						"type": "array"
					},
					"account_id": {
						"type": "string"
					},
					"transaction_type": {
						"type": "string"
					},
					"auth": {
						"type": "string"
					},
					"refresh_token": {
						"type": "string"
					}
				},
				"variables": {
					"bearer_authentication": {
						"type": "String"
					}
				},
				"folder": {
					"name": "HTM/Transaction Lines/Sub Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-28T12:49:20Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_TransactionLinesPurchaseOrder')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Process Transaction Lines_copy1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach Transaction Get Lines",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.item_array",
								"type": "Expression"
							},
							"batchCount": 2,
							"activities": [
								{
									"name": "Transaction Lines",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('?limit=1000&offset=',string(0))}"
										},
										{
											"name": "Destination",
											"value": "unified-data-cluster/legacy-htm/transaction-lines/work-order/@{concat('workorderlines-',guid())}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:05:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@concat('{\"q\": \"SELECT * FROM TransactionLine WHERE transaction LIKE ',item().internalId,'\"}')",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Prefer": "transient",
												"Authorization": {
													"value": "@variables('bearer_authentication')",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 2
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "['amountlinked']"
													},
													"sink": {
														"path": "$['amountlinked']"
													}
												},
												{
													"source": {
														"path": "['assemblycomponent']"
													},
													"sink": {
														"path": "$['assemblycomponent']"
													}
												},
												{
													"source": {
														"path": "['cleared']"
													},
													"sink": {
														"path": "$['cleared']"
													}
												},
												{
													"source": {
														"path": "['commitmentfirm']"
													},
													"sink": {
														"path": "$['commitmentfirm']"
													}
												},
												{
													"source": {
														"path": "['debitforeignamount']"
													},
													"sink": {
														"path": "$['debitforeignamount']"
													}
												},
												{
													"source": {
														"path": "['donotdisplayline']"
													},
													"sink": {
														"path": "$['donotdisplayline']"
													}
												},
												{
													"source": {
														"path": "['dropship']"
													},
													"sink": {
														"path": "$['dropship']"
													}
												},
												{
													"source": {
														"path": "['entity']"
													},
													"sink": {
														"path": "$['entity']"
													}
												},
												{
													"source": {
														"path": "['expenseaccount']"
													},
													"sink": {
														"path": "$['expenseaccount']"
													}
												},
												{
													"source": {
														"path": "['foreignamount']"
													},
													"sink": {
														"path": "$['foreignamount']"
													}
												},
												{
													"source": {
														"path": "['hasfulfillableitems']"
													},
													"sink": {
														"path": "$['hasfulfillableitems']"
													}
												},
												{
													"source": {
														"path": "['id']"
													},
													"sink": {
														"path": "$['id']"
													}
												},
												{
													"source": {
														"path": "['isbillable']"
													},
													"sink": {
														"path": "$['isbillable']"
													}
												},
												{
													"source": {
														"path": "['isclosed']"
													},
													"sink": {
														"path": "$['isclosed']"
													}
												},
												{
													"source": {
														"path": "['iscogs']"
													},
													"sink": {
														"path": "$['iscogs']"
													}
												},
												{
													"source": {
														"path": "['iscustomglline']"
													},
													"sink": {
														"path": "$['iscustomglline']"
													}
												},
												{
													"source": {
														"path": "['isfullyshipped']"
													},
													"sink": {
														"path": "$['isfullyshipped']"
													}
												},
												{
													"source": {
														"path": "['isfxvariance']"
													},
													"sink": {
														"path": "$['isfxvariance']"
													}
												},
												{
													"source": {
														"path": "['isinventoryaffecting']"
													},
													"sink": {
														"path": "$['isinventoryaffecting']"
													}
												},
												{
													"source": {
														"path": "['kitcomponent']"
													},
													"sink": {
														"path": "$['kitcomponent']"
													}
												},
												{
													"source": {
														"path": "['linelastmodifieddate']"
													},
													"sink": {
														"path": "$['linelastmodifieddate']"
													}
												},
												{
													"source": {
														"path": "['linesequencenumber']"
													},
													"sink": {
														"path": "$['linesequencenumber']"
													}
												},
												{
													"source": {
														"path": "['location']"
													},
													"sink": {
														"path": "$['location']"
													}
												},
												{
													"source": {
														"path": "['mainline']"
													},
													"sink": {
														"path": "$['mainline']"
													}
												},
												{
													"source": {
														"path": "['matchbilltoreceipt']"
													},
													"sink": {
														"path": "$['matchbilltoreceipt']"
													}
												},
												{
													"source": {
														"path": "['netamount']"
													},
													"sink": {
														"path": "$['netamount']"
													}
												},
												{
													"source": {
														"path": "['oldcommitmentfirm']"
													},
													"sink": {
														"path": "$['oldcommitmentfirm']"
													}
												},
												{
													"source": {
														"path": "['processedbyrevcommit']"
													},
													"sink": {
														"path": "$['processedbyrevcommit']"
													}
												},
												{
													"source": {
														"path": "['quantitybilled']"
													},
													"sink": {
														"path": "$['quantitybilled']"
													}
												},
												{
													"source": {
														"path": "['quantityrejected']"
													},
													"sink": {
														"path": "$['quantityrejected']"
													}
												},
												{
													"source": {
														"path": "['quantityshiprecv']"
													},
													"sink": {
														"path": "$['quantityshiprecv']"
													}
												},
												{
													"source": {
														"path": "['specialorder']"
													},
													"sink": {
														"path": "$['specialorder']"
													}
												},
												{
													"source": {
														"path": "['subsidiary']"
													},
													"sink": {
														"path": "$['subsidiary']"
													}
												},
												{
													"source": {
														"path": "['taxline']"
													},
													"sink": {
														"path": "$['taxline']"
													}
												},
												{
													"source": {
														"path": "['transaction']"
													},
													"sink": {
														"path": "$['transaction']"
													}
												},
												{
													"source": {
														"path": "['transactiondiscount']"
													},
													"sink": {
														"path": "$['transactiondiscount']"
													}
												},
												{
													"source": {
														"path": "['uniquekey']"
													},
													"sink": {
														"path": "$['uniquekey']"
													}
												},
												{
													"source": {
														"path": "['units']"
													},
													"sink": {
														"path": "$['units']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "HTM_Netsuite_SuiteQL",
											"type": "DatasetReference",
											"parameters": {
												"account_id": {
													"value": "@pipeline().parameters.account_id",
													"type": "Expression"
												},
												"offset": 0
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Legacy_HTM_TransactionLinesInvoice",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Post Refresh Token",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.account_id,'.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Authorization": {
												"value": "@concat('Basic ',pipeline().parameters.auth)",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@concat('grant_type=refresh_token&refresh_token=',pipeline().parameters.refresh_token)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Post Refresh Token",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "bearer_authentication",
										"value": {
											"value": "@concat(activity('Post Refresh Token').output.token_type,' ',activity('Post Refresh Token').output.access_token)",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"item_array": {
						"type": "array"
					},
					"account_id": {
						"type": "string"
					},
					"transaction_type": {
						"type": "string"
					},
					"auth": {
						"type": "string"
					},
					"refresh_token": {
						"type": "string"
					}
				},
				"variables": {
					"bearer_authentication": {
						"type": "String"
					}
				},
				"folder": {
					"name": "HTM/Transaction Lines/Sub Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-28T12:49:26Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/HTM_Netsuite_SuiteQL')]",
				"[concat(variables('workspaceId'), '/datasets/Legacy_HTM_TransactionLinesInvoice')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseDatabase')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": {
							"value": "@dataset().DbName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"DbName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GloviaProd')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GloviaData",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					},
					"schemaname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaname",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/GloviaData')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTMSalesOrderJsonADLS2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('sales-order-hed-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/sales-order-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"links": {
							"type": "array"
						},
						"actualshipdate": {
							"type": "string"
						},
						"amountlinked": {
							"type": "string"
						},
						"assemblycomponent": {
							"type": "string"
						},
						"cleared": {
							"type": "string"
						},
						"commitinventory": {
							"type": "string"
						},
						"commitmentfirm": {
							"type": "string"
						},
						"createdfrom": {
							"type": "string"
						},
						"debitforeignamount": {
							"type": "string"
						},
						"donotdisplayline": {
							"type": "string"
						},
						"dropship": {
							"type": "string"
						},
						"expenseaccount": {
							"type": "string"
						},
						"foreignamount": {
							"type": "string"
						},
						"fulfillable": {
							"type": "string"
						},
						"hasfulfillableitems": {
							"type": "string"
						},
						"id": "{\r\n  \"type\": \"string\"\r\n}",
						"isbillable": {
							"type": "string"
						},
						"isclosed": {
							"type": "string"
						},
						"iscogs": {
							"type": "string"
						},
						"iscustomglline": {
							"type": "string"
						},
						"isfullyshipped": {
							"type": "string"
						},
						"isfxvariance": {
							"type": "string"
						},
						"isinventoryaffecting": {
							"type": "string"
						},
						"item": {
							"type": "string"
						},
						"itemtype": {
							"type": "string"
						},
						"kitcomponent": {
							"type": "string"
						},
						"linelastmodifieddate": {
							"type": "string"
						},
						"linesequencenumber": {
							"type": "string"
						},
						"location": {
							"type": "string"
						},
						"mainline": {
							"type": "string"
						},
						"matchbilltoreceipt": {
							"type": "string"
						},
						"netamount": {
							"type": "string"
						},
						"oldcommitmentfirm": {
							"type": "string"
						},
						"quantity": {
							"type": "string"
						},
						"quantitybilled": {
							"type": "string"
						},
						"quantitypacked": {
							"type": "string"
						},
						"quantitypicked": {
							"type": "string"
						},
						"quantityrejected": {
							"type": "string"
						},
						"quantityshiprecv": {
							"type": "string"
						},
						"rate": {
							"type": "string"
						},
						"rateamount": {
							"type": "string"
						},
						"specialorder": {
							"type": "string"
						},
						"subsidiary": {
							"type": "string"
						},
						"taxline": {
							"type": "string"
						},
						"transaction": {
							"type": "string"
						},
						"transactiondiscount": {
							"type": "string"
						},
						"uniquekey": {
							"type": "string"
						},
						"units": {
							"type": "string"
						},
						"creditforeignamount": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM_Netsuite_SuiteQL')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Netsuite SuiteQL",
					"type": "LinkedServiceReference",
					"parameters": {
						"accountid": {
							"value": "@dataset().account_id",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"account_id": {
						"type": "string"
					},
					"offset": {
						"type": "int"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('?limit=1000&offset=',string(dataset().offset))",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Netsuite SuiteQL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HT_SalesOrderSynapse')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HTM_NetSuite",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"limit": {
						"type": "int",
						"defaultValue": 1000
					},
					"offset": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "/app/site/hosting/restlet.nl?script=811&deploy=1"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/HTM_NetSuite')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LHTMWorkOrderHeaders')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ModineerTableStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": "LHTMWorkOrderHeaders"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ModineerTableStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_Account')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('account-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/accounts",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_AccountType')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('accounttype-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/account-type",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_AssemblyBuildHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('assemblybuild-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/assembly-build-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_AssemblyUnbuildHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('assemblyunbuild-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/assembly-unbuild-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_CashSaleHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('cashsale-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/cash-sale-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_CheckHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('check-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/check-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_Contacts')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('contacts-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/contacts",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"company": {
							"type": "string"
						},
						"custentityht_sendbulkemail": {
							"type": "string"
						},
						"custentityht_sendpricing": {
							"type": "string"
						},
						"custentityht_sendservey": {
							"type": "string"
						},
						"datecreated": {
							"type": "string"
						},
						"defaultbillingaddress": {
							"type": "string"
						},
						"defaultshippingaddress": {
							"type": "string"
						},
						"duplicate": {
							"type": "string"
						},
						"email": {
							"type": "string"
						},
						"entityid": {
							"type": "string"
						},
						"entitytitle": {
							"type": "string"
						},
						"firstname": {
							"type": "string"
						},
						"globalsubscriptionstatus": {
							"type": "string"
						},
						"id": "{\r\n  \"type\": \"string\"\r\n}",
						"isinactive": {
							"type": "string"
						},
						"isprivate": {
							"type": "string"
						},
						"lastmodifieddate": {
							"type": "string"
						},
						"lastname": {
							"type": "string"
						},
						"phone": {
							"type": "string"
						},
						"title": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_CreditMemoHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('creditmemo-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/credit-memo-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_CustomerDepositHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('customerdeposit-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/customer-deposit-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_CustomerPaymentsHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('customerpayment-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/customer-payment-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_CustomerRefundHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('customerrefund-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/customer-refund-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_Customers')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "legacy-htm/customers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"alcoholrecipienttype": {
							"type": "string"
						},
						"altname": {
							"type": "string"
						},
						"balancesearch": {
							"type": "string"
						},
						"category": {
							"type": "string"
						},
						"companyname": {
							"type": "string"
						},
						"consolbalancesearch": {
							"type": "string"
						},
						"consoldaysoverduesearch": {
							"type": "string"
						},
						"consoloverduebalancesearch": {
							"type": "string"
						},
						"consolunbilledorderssearch": {
							"type": "string"
						},
						"contactlist": {
							"type": "string"
						},
						"creditholdoverride": {
							"type": "string"
						},
						"currency": {
							"type": "string"
						},
						"custentity1": {
							"type": "string"
						},
						"custentity_2663_customer_refund": {
							"type": "string"
						},
						"custentity_2663_direct_debit": {
							"type": "string"
						},
						"custentityht_3rdpartybillingcountry": {
							"type": "string"
						},
						"custentityht_alertforquality": {
							"type": "string"
						},
						"custentityht_automotivecustomer": {
							"type": "string"
						},
						"custentityht_barcode": {
							"type": "string"
						},
						"custentityht_callbeforeshipping_entfld": {
							"type": "string"
						},
						"custentityht_certsrequired": {
							"type": "string"
						},
						"custentityht_checkbook": {
							"type": "string"
						},
						"custentityht_requiresheattreatedskid": {
							"type": "string"
						},
						"custentityht_shipcomplete": {
							"type": "string"
						},
						"custentityht_shipper": {
							"type": "string"
						},
						"custentityht_skidquantitygroup": {
							"type": "string"
						},
						"custentityhtfreightchargepreferences": {
							"type": "string"
						},
						"custentityhtshortcustomername": {
							"type": "string"
						},
						"custentityhtspecialpackaging": {
							"type": "string"
						},
						"datecreated": {
							"type": "string"
						},
						"defaultbillingaddress": {
							"type": "string"
						},
						"defaultshippingaddress": {
							"type": "string"
						},
						"displaysymbol": {
							"type": "string"
						},
						"duplicate": {
							"type": "string"
						},
						"emailpreference": {
							"type": "string"
						},
						"emailtransactions": {
							"type": "string"
						},
						"entityid": {
							"type": "string"
						},
						"entitystatus": {
							"type": "string"
						},
						"entitytitle": {
							"type": "string"
						},
						"faxtransactions": {
							"type": "string"
						},
						"firstorderdate": {
							"type": "string"
						},
						"firstsaledate": {
							"type": "string"
						},
						"giveaccess": {
							"type": "string"
						},
						"globalsubscriptionstatus": {
							"type": "string"
						},
						"id": "{\r\n  \"type\": \"string\"\r\n}",
						"isbudgetapproved": {
							"type": "string"
						},
						"isinactive": {
							"type": "string"
						},
						"isperson": {
							"type": "string"
						},
						"lastmodifieddate": {
							"type": "string"
						},
						"lastorderdate": {
							"type": "string"
						},
						"lastsaledate": {
							"type": "string"
						},
						"oncredithold": {
							"type": "string"
						},
						"overduebalancesearch": {
							"type": "string"
						},
						"overridecurrencyformat": {
							"type": "string"
						},
						"pricelevel": {
							"type": "string"
						},
						"printtransactions": {
							"type": "string"
						},
						"probability": {
							"type": "string"
						},
						"receivablesaccount": {
							"type": "string"
						},
						"salesrep": {
							"type": "string"
						},
						"searchstage": {
							"type": "string"
						},
						"shipcomplete": {
							"type": "string"
						},
						"shippingcarrier": {
							"type": "string"
						},
						"symbolplacement": {
							"type": "string"
						},
						"terms": {
							"type": "string"
						},
						"unbilledorderssearch": {
							"type": "string"
						},
						"weblead": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_DepositApplicationHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('depositapplication-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/deposit-application-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_DepositHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('deposit-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/deposit-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_InventoryAdjustmentHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "legacy-htm/inventory-adjustment-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_InventoryTransferHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('inventorytransfer-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/inventory-transfer-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_InventoryWorksheetHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('inventoryworksheet-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/inventory-worksheet-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_InvoiceHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('invoice',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/invoice-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_ItemFulfillmentHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('itemfulfillment-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/item-fulfillment-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_ItemReceiptHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('itemreceipt-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/item-receipt-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_JournalEntryHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('journalentry-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/journal-entry-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_PurchaseOrderHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('purchaseorder-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/purchase-order-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_ReturnAuthorizationHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('returnauthorization-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/return-authorization-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_SalesOrderHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ModineerTableStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": "LHTMSoHead"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ModineerTableStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_Terms')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('terms-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/terms",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_TransactionLinesInvoice')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('invoicelines-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/transaction-lines/invoice",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_TransactionLinesPurchaseOrder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('purchaseorderline-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/transaction-lines/purchase-order",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_TransactionLinesSalesOrders')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('salesorderlines-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/transaction-lines/sales-order",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"amountlinked": {
							"type": "string"
						},
						"assemblycomponent": {
							"type": "string"
						},
						"cleared": {
							"type": "string"
						},
						"commitmentfirm": {
							"type": "string"
						},
						"debitforeignamount": {
							"type": "string"
						},
						"donotdisplayline": {
							"type": "string"
						},
						"dropship": {
							"type": "string"
						},
						"entity": {
							"type": "string"
						},
						"expenseaccount": {
							"type": "string"
						},
						"foreignamount": {
							"type": "string"
						},
						"hasfulfillableitems": {
							"type": "string"
						},
						"id": "{\r\n  \"type\": \"string\"\r\n}",
						"isbillable": {
							"type": "string"
						},
						"isclosed": {
							"type": "string"
						},
						"iscogs": {
							"type": "string"
						},
						"iscustomglline": {
							"type": "string"
						},
						"isfullyshipped": {
							"type": "string"
						},
						"isfxvariance": {
							"type": "string"
						},
						"isinventoryaffecting": {
							"type": "string"
						},
						"kitcomponent": {
							"type": "string"
						},
						"linelastmodifieddate": {
							"type": "string"
						},
						"linesequencenumber": {
							"type": "string"
						},
						"location": {
							"type": "string"
						},
						"mainline": {
							"type": "string"
						},
						"matchbilltoreceipt": {
							"type": "string"
						},
						"netamount": {
							"type": "string"
						},
						"oldcommitmentfirm": {
							"type": "string"
						},
						"processedbyrevcommit": {
							"type": "string"
						},
						"quantitybilled": {
							"type": "string"
						},
						"quantityrejected": {
							"type": "string"
						},
						"quantityshiprecv": {
							"type": "string"
						},
						"specialorder": {
							"type": "string"
						},
						"subsidiary": {
							"type": "string"
						},
						"taxline": {
							"type": "string"
						},
						"transaction": {
							"type": "string"
						},
						"transactiondiscount": {
							"type": "string"
						},
						"uniquekey": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_TransactionLinesWorkOrders')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('workorderlines-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/transaction-lines/work-order",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_WorkOrderHead')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('workorder-',guid())",
							"type": "Expression"
						},
						"folderPath": "legacy-htm/work-order-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy_HTM_WorkOrderHead_Processed')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "legacy-htm/work-order-headers",
						"fileSystem": "unified-data-cluster"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Modineer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {},
				"sqlPool": {
					"referenceName": "Modineer",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/Modineer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NetsuiteData')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				},
				"sqlPool": {
					"referenceName": "NetsuiteData",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/NetsuiteData')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NetsuiteODBCSource')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NetsuiteODBC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OdbcTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/NetsuiteODBC')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SalesOrderCommonDatasetJSON')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Connection to your Azure Data Lake Store",
				"linkedServiceName": {
					"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string",
						"defaultValue": "unified-data-cluster"
					},
					"Directory": {
						"type": "string",
						"defaultValue": "sales-order-data"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "HTMSalesOrders.json",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"encodingName": "UTF-8"
				},
				"schema": {
					"type": "object",
					"properties": {
						"subsidiary": {
							"type": "string"
						},
						"transNumber": {
							"type": "string"
						},
						"customer": {
							"type": "string"
						},
						"tranDate": {
							"type": "string"
						},
						"poNum": {
							"type": "string"
						},
						"shipComplete": {
							"type": "boolean"
						},
						"requestedShipDate": {
							"type": "string"
						},
						"actualShipDate": {
							"type": "string"
						},
						"item": {
							"type": "string"
						},
						"amount": {
							"type": "string"
						},
						"quantity": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SinkCSV')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerlake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileSystem": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerlake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SinkParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "modineerlake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_system": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().file_system",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerlake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/htmSalesOrderHeader')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "abbrevtype",
						"type": "nvarchar"
					},
					{
						"name": "actualshipdate",
						"type": "date"
					},
					{
						"name": "balsegstatus",
						"type": "bit"
					},
					{
						"name": "billingaddress",
						"type": "int",
						"precision": 10
					},
					{
						"name": "billingstatus",
						"type": "bit"
					},
					{
						"name": "closedate",
						"type": "date"
					},
					{
						"name": "createdby",
						"type": "int",
						"precision": 10
					},
					{
						"name": "createddate",
						"type": "date"
					},
					{
						"name": "currency",
						"type": "int",
						"precision": 10
					},
					{
						"name": "custbodyht_asaporder_bodyfield",
						"type": "bit"
					},
					{
						"name": "custbodyht_boltobeprinted_tranbdy",
						"type": "bit"
					},
					{
						"name": "custbodyht_confirmto",
						"type": "nvarchar"
					},
					{
						"name": "custbodyht_customerscustomerpo_bdfield",
						"type": "int",
						"precision": 10
					},
					{
						"name": "custbodyht_ishistoricaltransaction",
						"type": "bit"
					},
					{
						"name": "custbodyht_numofshiplabelstoprint",
						"type": "int",
						"precision": 10
					},
					{
						"name": "custbodyht_ordersfulyscheduled_tranbdy",
						"type": "bit"
					},
					{
						"name": "custbodyht_shipper",
						"type": "nvarchar"
					},
					{
						"name": "custbodyhtfreightchargepreferences",
						"type": "int",
						"precision": 10
					},
					{
						"name": "custbodyhthaschangeorders",
						"type": "bit"
					},
					{
						"name": "custbodyhtproductiondate",
						"type": "date"
					},
					{
						"name": "daysopen",
						"type": "float",
						"precision": 15
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "entity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "exchangerate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fax",
						"type": "nvarchar"
					},
					{
						"name": "foreigntotal",
						"type": "decimal",
						"precision": 25,
						"scale": 4
					},
					{
						"name": "id",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "includeinforecast",
						"type": "bit"
					},
					{
						"name": "isfinchrg",
						"type": "bit"
					},
					{
						"name": "isreversal",
						"type": "bit"
					},
					{
						"name": "lastmodifiedby",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "lastmodifieddate",
						"type": "date"
					},
					{
						"name": "memo",
						"type": "nvarchar"
					},
					{
						"name": "nexus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ordpicked",
						"type": "bit"
					},
					{
						"name": "paymenthold",
						"type": "bit"
					},
					{
						"name": "posting",
						"type": "bit"
					},
					{
						"name": "printedpickingticket",
						"type": "bit"
					},
					{
						"name": "recordtype",
						"type": "nvarchar"
					},
					{
						"name": "shipcomplete",
						"type": "bit"
					},
					{
						"name": "shipdate",
						"type": "date"
					},
					{
						"name": "shippingaddress",
						"type": "int",
						"precision": 10
					},
					{
						"name": "source",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "char"
					},
					{
						"name": "terms",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "trandate",
						"type": "date"
					},
					{
						"name": "trandisplayname",
						"type": "nvarchar"
					},
					{
						"name": "tranid",
						"type": "nvarchar"
					},
					{
						"name": "transactionnumber",
						"type": "nvarchar"
					},
					{
						"name": "type",
						"type": "nvarchar"
					},
					{
						"name": "typebaseddocumentnumber",
						"type": "nvarchar"
					},
					{
						"name": "userevenuearrangement",
						"type": "bit"
					},
					{
						"name": "visibletocustomer",
						"type": "bit"
					},
					{
						"name": "void",
						"type": "bit"
					},
					{
						"name": "voided",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "htm",
					"table": "SalesOrderHeader"
				},
				"sqlPool": {
					"referenceName": "NetsuiteData",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/NetsuiteData')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Glovia Reports')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "PowerBIWorkspace",
				"typeProperties": {
					"workspaceID": "07766c8f-f1c7-4227-a8e4-05b81ad1d804",
					"tenantID": "ea956f36-77a0-4634-9b11-803ca2beeac1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GloviaData')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Access to the Oracle server through a self hosted runtime.",
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('GloviaData_connectionString')]"
				},
				"connectVia": {
					"referenceName": "GloviaServerIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/GloviaServerIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTM_NetSuite')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Service for HTM NetSuite",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('HTM_NetSuite_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('HTM_NetSuite_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HTM_NetSuite_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy HTM Netsuite Refresh Token')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"account_id": {
						"type": "String",
						"defaultValue": "3675944"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Legacy HTM Netsuite Refresh Token_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Legacy HTM Netsuite Refresh Token_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Legacy HTM Netsuite Refresh Token_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ModineerSQLPool')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ModineerSQLPool_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ModineerTableStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('ModineerTableStorage_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Netsuite SuiteQL')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"accountid": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Netsuite SuiteQL_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NetsuiteODBC')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "64 bit driver installed on svm02eset001",
				"annotations": [],
				"type": "Odbc",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "[parameters('NetsuiteODBC_connectionString')]"
					},
					"authenticationType": "Basic",
					"userName": "[parameters('NetsuiteODBC_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NetsuiteODBC_password')]"
					}
				},
				"connectVia": {
					"referenceName": "GloviaServerIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/GloviaServerIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/modineerlake')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('modineerlake_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/modineerworkspace-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('modineerworkspace-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/modineerworkspace-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('modineerworkspace-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Data Refresh Trigger')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Data Refresh",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2021-10-27T11:00:00",
						"timeZone": "Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Data Refresh')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GloviaServerIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"description": "Integration runtime for the Glovia Server.\nRuntime to connect the Netsuite ODBC to to synapse.",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Legacy HTM Work Order Processing')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "modineerworkspace-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tabbrevtype as string,\n\t\tbalsegstatus as short,\n\t\tbillingstatus as boolean,\n\t\tclosedate as date,\n\t\tcommitted as boolean,\n\t\tcreatedby as short,\n\t\tcreateddate as date,\n\t\tcurrency as boolean,\n\t\tcustbodyhtallowworkorderclose as boolean,\n\t\tcustbodyhtisclosedworkorderbuildunbld as boolean,\n\t\tcustbodyhtproducionschedulewoline as integer,\n\t\tcustbodyhtproductionschedule as short,\n\t\tcustbodyhtsalesorder as integer,\n\t\tcustbodyhtsalesorderquantity as short,\n\t\tcustbodyhtworkorderttype as boolean,\n\t\tdaysopen as short,\n\t\tentity as short,\n\t\texchangerate as boolean,\n\t\tid as integer,\n\t\tincludeinforecast as boolean,\n\t\tisfinchrg as boolean,\n\t\tisreversal as boolean,\n\t\tlastmodifiedby as short,\n\t\tlastmodifieddate as date,\n\t\tnexus as boolean,\n\t\tnumber as integer,\n\t\tordpicked as boolean,\n\t\tpaymenthold as boolean,\n\t\tposting as boolean,\n\t\tpostingperiod as short,\n\t\tprintedpickingticket as boolean,\n\t\trecordtype as string,\n\t\tshipcomplete as boolean,\n\t\tstatus as string,\n\t\ttrandate as date,\n\t\ttrandisplayname as string,\n\t\ttranid as integer,\n\t\ttransactionnumber as integer,\n\t\ttype as string,\n\t\ttypebaseddocumentnumber as integer,\n\t\tuserevenuearrangement as boolean,\n\t\tvisibletocustomer as boolean,\n\t\tvoid as boolean,\n\t\tvoided as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tmoveFiles: ['legacy-htm/work-order-headers','legacy-htm/2-processed-data/work-order-headers'],\n\tformat: 'json',\n\tfileSystem: 'unified-data-cluster',\n\tdocumentForm: 'documentPerLine',\n\tdateFormats: ['MM/dd/yyyy','MM-dd-yyyy','MM.dd.yyyy'],\n\ttimestampFormats: ['MM/dd/yyyy'],\n\tpreferredIntegralType: 'integer',\n\tpreferredFractionalType: 'double',\n\tbooleanFormat: ['true', 'false'],\n\twildcardPaths:['legacy-htm/work-order-headers/*']) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'json',\n\tfileSystem: 'unified-data-cluster',\n\tfolderPath: 'legacy-htm/1-staged-data/work-order-headers',\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/modineerworkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/UpdateSQLTableFromParquet')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SinkParquet",
								"type": "DatasetReference"
							},
							"name": "NewData"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "modineerlake",
								"type": "LinkedServiceReference"
							},
							"name": "SinkToAzureTable"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "parameters{\n\tSchemaName as string,\n\tTableName as string,\n\tKeyColumns as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tformat: 'parquet') ~> NewData\nNewData alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'unified-data-cluster',\n\tfolderPath: 'GLOVIA_PROD/JE_DET/Processed',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:(array($KeyColumns)),\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tdateFormat:'MM/dd/yyyy',\n\ttimestampFormat:'MM/dd/yyyy HH:mm:ss',\n\tbooleanFormat: ['1', '0'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> SinkToAzureTable"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SinkParquet')]",
				"[concat(variables('workspaceId'), '/linkedServices/modineerlake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/List Stored Procedures')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"content": {
					"query": "SELECT \n  ROUTINE_SCHEMA,\n  ROUTINE_NAME\nFROM INFORMATION_SCHEMA.ROUTINES\nWHERE ROUTINE_TYPE = 'PROCEDURE';",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "Glovia",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP 10 *\nFROM OPENROWSET(BULK 'https://modineerlake.blob.core.windows.net/unified-data-cluster/GLOVIA_PROD/JE_DET/Processed/part-00000-519a7cde-95b0-433f-af3b-2f0953f866a2-c000.snappy.parquet',\n                FORMAT = 'PARQUET') AS ROWS\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'unified-data-cluster_modineerlake_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [unified-data-cluster_modineerlake_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://unified-data-cluster@modineerlake.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE GLOVIA_PROD.JE_DET (\t[JE_CCN] varchar(8000),\n\t[JE] varchar(8000),\n\t[JE_SUB] varchar(8000),\n\t[JE_LINE] varchar(8000),\n\t[GL_ACCT] varchar(8000),\n\t[CCN] varchar(8000),\n\t[ASOF_DATE] datetime2(7),\n\t[PCT] numeric(38,18),\n\t[QTY] numeric(38,18),\n\t[REF] varchar(8000),\n\t[SU] varchar(8000),\n\t[ASOF_YEAR] varchar(8000),\n\t[REVERSE_YEAR] varchar(8000),\n\t[MEMO] varchar(8000),\n\t[OVT] varchar(8000),\n\t[PA_COST_FLAG] varchar(8000),\n\t[PROJECT_ID] varchar(8000),\n\t[TASK_ID] varchar(8000),\n\t[GL_SL] varchar(8000),\n\t[GL_DL] varchar(8000),\n\t[DEBIT_AMT] numeric(38,18),\n\t[CREDIT_AMT] numeric(38,18),\n\t[USER_ALPHA1] varchar(8000),\n\t[USER_ALPHA2] varchar(8000),\n\t[USER_ALPHA3] varchar(8000),\n\t[USER_NUM1] numeric(38,18),\n\t[USER_NUM2] numeric(38,18),\n\t[USER_NUM3] numeric(38,18),\n\t[USER_DATE] datetime2(7),\n\t[USER_TIME] varchar(8000),\n\t[BANK] varchar(8000),\n\t[REF_SEQ] varchar(8000),\n\t[VAT] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'GLOVIA_PROD/JE_DET/JE_DET.parquet',\n\tDATA_SOURCE = [unified-data-cluster_modineerlake_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM GLOVIA_PROD.JE_DET\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "Modineer",
						"poolName": "Modineer"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "ModSparkPool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "true",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "5",
						"spark.autotune.trackingId": "61377e38-7384-4788-a044-ac1bc13a2370"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "python"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/94182533-145d-4aab-ac52-b1f4c605b8b0/resourceGroups/Modineer/providers/Microsoft.Synapse/workspaces/modineerworkspace/bigDataPools/ModSparkPool",
						"name": "ModSparkPool",
						"type": "Spark",
						"endpoint": "https://modineerworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ModSparkPool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"tags": [
								"parameters"
							]
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 2')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "ModSparkPool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "true",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "4",
						"spark.autotune.trackingId": "cc1015e8-79e9-4b62-b99d-de377f935128"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "python"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/94182533-145d-4aab-ac52-b1f4c605b8b0/resourceGroups/Modineer/providers/Microsoft.Synapse/workspaces/modineerworkspace/bigDataPools/ModSparkPool",
						"name": "ModSparkPool",
						"type": "Spark",
						"endpoint": "https://modineerworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ModSparkPool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"tags": [
								"parameters"
							]
						},
						"source": [
							"sch = \"\"\r\n",
							"tbl = \"\""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"#Set location of the data\r\n",
							"loc = f\"/unified-data-cluster/{sch}/{tbl}\"\r\n",
							"df = (spark\r\n",
							"        .read\r\n",
							"        .parquet(loc))"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Modineer')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NetsuiteData')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}